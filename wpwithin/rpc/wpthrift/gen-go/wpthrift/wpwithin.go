// Autogenerated by Thrift Compiler (0.10.0)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package wpthrift

import (
	"bytes"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
	"github.com/wptechinnovation/worldpay-within-sdk/sdkcore/wpwithin/rpc/wpthrift/gen-go/wpthrift_types"

)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

var _ = wpthrift_types.GoUnusedProtection__
type WPWithin interface {  //WorldpayWithin Service - exposing all WorldpayWithin SDK functionality

  // Parameters:
  //  - Name
  //  - Description
  Setup(name string, description string) (err error)
  // Parameters:
  //  - Svc
  AddService(svc *wpthrift_types.Service) (err error)
  // Parameters:
  //  - Svc
  RemoveService(svc *wpthrift_types.Service) (err error)
  // Parameters:
  //  - Scheme
  //  - Hostname
  //  - Port
  //  - UrlPrefix
  //  - ClientID
  //  - HceCard
  //  - PspConfig
  InitConsumer(scheme string, hostname string, port int32, urlPrefix string, clientID string, hceCard *wpthrift_types.HCECard, pspConfig map[string]string) (err error)
  // Parameters:
  //  - PspConfig
  InitProducer(pspConfig map[string]string) (err error)
  GetDevice() (r *wpthrift_types.Device, err error)
  // Parameters:
  //  - TimeoutMillis
  StartServiceBroadcast(timeoutMillis int32) (err error)
  StopServiceBroadcast() (err error)
  // Parameters:
  //  - TimeoutMillis
  DeviceDiscovery(timeoutMillis int32) (r map[*wpthrift_types.ServiceMessage]struct{}, err error)
  RequestServices() (r map[*wpthrift_types.ServiceDetails]struct{}, err error)
  // Parameters:
  //  - ServiceId
  GetServicePrices(serviceId int32) (r map[*wpthrift_types.Price]struct{}, err error)
  // Parameters:
  //  - ServiceId
  //  - NumberOfUnits
  //  - PriceId
  SelectService(serviceId int32, numberOfUnits int32, priceId int32) (r *wpthrift_types.TotalPriceResponse, err error)
  // Parameters:
  //  - Request
  MakePayment(request *wpthrift_types.TotalPriceResponse) (r *wpthrift_types.PaymentResponse, err error)
  // Parameters:
  //  - ServiceID
  //  - ServiceDeliveryToken
  //  - UnitsToSupply
  BeginServiceDelivery(serviceID int32, serviceDeliveryToken *wpthrift_types.ServiceDeliveryToken, unitsToSupply int32) (r *wpthrift_types.ServiceDeliveryToken, err error)
  // Parameters:
  //  - ServiceID
  //  - ServiceDeliveryToken
  //  - UnitsReceived
  EndServiceDelivery(serviceID int32, serviceDeliveryToken *wpthrift_types.ServiceDeliveryToken, unitsReceived int32) (r *wpthrift_types.ServiceDeliveryToken, err error)
}

//WorldpayWithin Service - exposing all WorldpayWithin SDK functionality
type WPWithinClient struct {
  Transport thrift.TTransport
  ProtocolFactory thrift.TProtocolFactory
  InputProtocol thrift.TProtocol
  OutputProtocol thrift.TProtocol
  SeqId int32
}

func NewWPWithinClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *WPWithinClient {
  return &WPWithinClient{Transport: t,
    ProtocolFactory: f,
    InputProtocol: f.GetProtocol(t),
    OutputProtocol: f.GetProtocol(t),
    SeqId: 0,
  }
}

func NewWPWithinClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *WPWithinClient {
  return &WPWithinClient{Transport: t,
    ProtocolFactory: nil,
    InputProtocol: iprot,
    OutputProtocol: oprot,
    SeqId: 0,
  }
}

// Parameters:
//  - Name
//  - Description
func (p *WPWithinClient) Setup(name string, description string) (err error) {
  if err = p.sendSetup(name, description); err != nil { return }
  return p.recvSetup()
}

func (p *WPWithinClient) sendSetup(name string, description string)(err error) {
  oprot := p.OutputProtocol
  if oprot == nil {
    oprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.OutputProtocol = oprot
  }
  p.SeqId++
  if err = oprot.WriteMessageBegin("setup", thrift.CALL, p.SeqId); err != nil {
      return
  }
  args := WPWithinSetupArgs{
  Name : name,
  Description : description,
  }
  if err = args.Write(oprot); err != nil {
      return
  }
  if err = oprot.WriteMessageEnd(); err != nil {
      return
  }
  return oprot.Flush()
}


func (p *WPWithinClient) recvSetup() (err error) {
  iprot := p.InputProtocol
  if iprot == nil {
    iprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.InputProtocol = iprot
  }
  method, mTypeId, seqId, err := iprot.ReadMessageBegin()
  if err != nil {
    return
  }
  if method != "setup" {
    err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "setup failed: wrong method name")
    return
  }
  if p.SeqId != seqId {
    err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "setup failed: out of sequence response")
    return
  }
  if mTypeId == thrift.EXCEPTION {
    error0 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
    var error1 error
    error1, err = error0.Read(iprot)
    if err != nil {
      return
    }
    if err = iprot.ReadMessageEnd(); err != nil {
      return
    }
    err = error1
    return
  }
  if mTypeId != thrift.REPLY {
    err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "setup failed: invalid message type")
    return
  }
  result := WPWithinSetupResult{}
  if err = result.Read(iprot); err != nil {
    return
  }
  if err = iprot.ReadMessageEnd(); err != nil {
    return
  }
  if result.Err != nil {
    err = result.Err
    return 
  }
  return
}

// Parameters:
//  - Svc
func (p *WPWithinClient) AddService(svc *wpthrift_types.Service) (err error) {
  if err = p.sendAddService(svc); err != nil { return }
  return p.recvAddService()
}

func (p *WPWithinClient) sendAddService(svc *wpthrift_types.Service)(err error) {
  oprot := p.OutputProtocol
  if oprot == nil {
    oprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.OutputProtocol = oprot
  }
  p.SeqId++
  if err = oprot.WriteMessageBegin("addService", thrift.CALL, p.SeqId); err != nil {
      return
  }
  args := WPWithinAddServiceArgs{
  Svc : svc,
  }
  if err = args.Write(oprot); err != nil {
      return
  }
  if err = oprot.WriteMessageEnd(); err != nil {
      return
  }
  return oprot.Flush()
}


func (p *WPWithinClient) recvAddService() (err error) {
  iprot := p.InputProtocol
  if iprot == nil {
    iprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.InputProtocol = iprot
  }
  method, mTypeId, seqId, err := iprot.ReadMessageBegin()
  if err != nil {
    return
  }
  if method != "addService" {
    err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "addService failed: wrong method name")
    return
  }
  if p.SeqId != seqId {
    err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "addService failed: out of sequence response")
    return
  }
  if mTypeId == thrift.EXCEPTION {
    error2 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
    var error3 error
    error3, err = error2.Read(iprot)
    if err != nil {
      return
    }
    if err = iprot.ReadMessageEnd(); err != nil {
      return
    }
    err = error3
    return
  }
  if mTypeId != thrift.REPLY {
    err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "addService failed: invalid message type")
    return
  }
  result := WPWithinAddServiceResult{}
  if err = result.Read(iprot); err != nil {
    return
  }
  if err = iprot.ReadMessageEnd(); err != nil {
    return
  }
  if result.Err != nil {
    err = result.Err
    return 
  }
  return
}

// Parameters:
//  - Svc
func (p *WPWithinClient) RemoveService(svc *wpthrift_types.Service) (err error) {
  if err = p.sendRemoveService(svc); err != nil { return }
  return p.recvRemoveService()
}

func (p *WPWithinClient) sendRemoveService(svc *wpthrift_types.Service)(err error) {
  oprot := p.OutputProtocol
  if oprot == nil {
    oprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.OutputProtocol = oprot
  }
  p.SeqId++
  if err = oprot.WriteMessageBegin("removeService", thrift.CALL, p.SeqId); err != nil {
      return
  }
  args := WPWithinRemoveServiceArgs{
  Svc : svc,
  }
  if err = args.Write(oprot); err != nil {
      return
  }
  if err = oprot.WriteMessageEnd(); err != nil {
      return
  }
  return oprot.Flush()
}


func (p *WPWithinClient) recvRemoveService() (err error) {
  iprot := p.InputProtocol
  if iprot == nil {
    iprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.InputProtocol = iprot
  }
  method, mTypeId, seqId, err := iprot.ReadMessageBegin()
  if err != nil {
    return
  }
  if method != "removeService" {
    err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "removeService failed: wrong method name")
    return
  }
  if p.SeqId != seqId {
    err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "removeService failed: out of sequence response")
    return
  }
  if mTypeId == thrift.EXCEPTION {
    error4 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
    var error5 error
    error5, err = error4.Read(iprot)
    if err != nil {
      return
    }
    if err = iprot.ReadMessageEnd(); err != nil {
      return
    }
    err = error5
    return
  }
  if mTypeId != thrift.REPLY {
    err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "removeService failed: invalid message type")
    return
  }
  result := WPWithinRemoveServiceResult{}
  if err = result.Read(iprot); err != nil {
    return
  }
  if err = iprot.ReadMessageEnd(); err != nil {
    return
  }
  if result.Err != nil {
    err = result.Err
    return 
  }
  return
}

// Parameters:
//  - Scheme
//  - Hostname
//  - Port
//  - UrlPrefix
//  - ClientID
//  - HceCard
//  - PspConfig
func (p *WPWithinClient) InitConsumer(scheme string, hostname string, port int32, urlPrefix string, clientID string, hceCard *wpthrift_types.HCECard, pspConfig map[string]string) (err error) {
  if err = p.sendInitConsumer(scheme, hostname, port, urlPrefix, clientID, hceCard, pspConfig); err != nil { return }
  return p.recvInitConsumer()
}

func (p *WPWithinClient) sendInitConsumer(scheme string, hostname string, port int32, urlPrefix string, clientID string, hceCard *wpthrift_types.HCECard, pspConfig map[string]string)(err error) {
  oprot := p.OutputProtocol
  if oprot == nil {
    oprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.OutputProtocol = oprot
  }
  p.SeqId++
  if err = oprot.WriteMessageBegin("initConsumer", thrift.CALL, p.SeqId); err != nil {
      return
  }
  args := WPWithinInitConsumerArgs{
  Scheme : scheme,
  Hostname : hostname,
  Port : port,
  UrlPrefix : urlPrefix,
  ClientID : clientID,
  HceCard : hceCard,
  PspConfig : pspConfig,
  }
  if err = args.Write(oprot); err != nil {
      return
  }
  if err = oprot.WriteMessageEnd(); err != nil {
      return
  }
  return oprot.Flush()
}


func (p *WPWithinClient) recvInitConsumer() (err error) {
  iprot := p.InputProtocol
  if iprot == nil {
    iprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.InputProtocol = iprot
  }
  method, mTypeId, seqId, err := iprot.ReadMessageBegin()
  if err != nil {
    return
  }
  if method != "initConsumer" {
    err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "initConsumer failed: wrong method name")
    return
  }
  if p.SeqId != seqId {
    err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "initConsumer failed: out of sequence response")
    return
  }
  if mTypeId == thrift.EXCEPTION {
    error6 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
    var error7 error
    error7, err = error6.Read(iprot)
    if err != nil {
      return
    }
    if err = iprot.ReadMessageEnd(); err != nil {
      return
    }
    err = error7
    return
  }
  if mTypeId != thrift.REPLY {
    err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "initConsumer failed: invalid message type")
    return
  }
  result := WPWithinInitConsumerResult{}
  if err = result.Read(iprot); err != nil {
    return
  }
  if err = iprot.ReadMessageEnd(); err != nil {
    return
  }
  if result.Err != nil {
    err = result.Err
    return 
  }
  return
}

// Parameters:
//  - PspConfig
func (p *WPWithinClient) InitProducer(pspConfig map[string]string) (err error) {
  if err = p.sendInitProducer(pspConfig); err != nil { return }
  return p.recvInitProducer()
}

func (p *WPWithinClient) sendInitProducer(pspConfig map[string]string)(err error) {
  oprot := p.OutputProtocol
  if oprot == nil {
    oprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.OutputProtocol = oprot
  }
  p.SeqId++
  if err = oprot.WriteMessageBegin("initProducer", thrift.CALL, p.SeqId); err != nil {
      return
  }
  args := WPWithinInitProducerArgs{
  PspConfig : pspConfig,
  }
  if err = args.Write(oprot); err != nil {
      return
  }
  if err = oprot.WriteMessageEnd(); err != nil {
      return
  }
  return oprot.Flush()
}


func (p *WPWithinClient) recvInitProducer() (err error) {
  iprot := p.InputProtocol
  if iprot == nil {
    iprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.InputProtocol = iprot
  }
  method, mTypeId, seqId, err := iprot.ReadMessageBegin()
  if err != nil {
    return
  }
  if method != "initProducer" {
    err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "initProducer failed: wrong method name")
    return
  }
  if p.SeqId != seqId {
    err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "initProducer failed: out of sequence response")
    return
  }
  if mTypeId == thrift.EXCEPTION {
    error8 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
    var error9 error
    error9, err = error8.Read(iprot)
    if err != nil {
      return
    }
    if err = iprot.ReadMessageEnd(); err != nil {
      return
    }
    err = error9
    return
  }
  if mTypeId != thrift.REPLY {
    err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "initProducer failed: invalid message type")
    return
  }
  result := WPWithinInitProducerResult{}
  if err = result.Read(iprot); err != nil {
    return
  }
  if err = iprot.ReadMessageEnd(); err != nil {
    return
  }
  if result.Err != nil {
    err = result.Err
    return 
  }
  return
}

func (p *WPWithinClient) GetDevice() (r *wpthrift_types.Device, err error) {
  if err = p.sendGetDevice(); err != nil { return }
  return p.recvGetDevice()
}

func (p *WPWithinClient) sendGetDevice()(err error) {
  oprot := p.OutputProtocol
  if oprot == nil {
    oprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.OutputProtocol = oprot
  }
  p.SeqId++
  if err = oprot.WriteMessageBegin("getDevice", thrift.CALL, p.SeqId); err != nil {
      return
  }
  args := WPWithinGetDeviceArgs{
  }
  if err = args.Write(oprot); err != nil {
      return
  }
  if err = oprot.WriteMessageEnd(); err != nil {
      return
  }
  return oprot.Flush()
}


func (p *WPWithinClient) recvGetDevice() (value *wpthrift_types.Device, err error) {
  iprot := p.InputProtocol
  if iprot == nil {
    iprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.InputProtocol = iprot
  }
  method, mTypeId, seqId, err := iprot.ReadMessageBegin()
  if err != nil {
    return
  }
  if method != "getDevice" {
    err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "getDevice failed: wrong method name")
    return
  }
  if p.SeqId != seqId {
    err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "getDevice failed: out of sequence response")
    return
  }
  if mTypeId == thrift.EXCEPTION {
    error10 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
    var error11 error
    error11, err = error10.Read(iprot)
    if err != nil {
      return
    }
    if err = iprot.ReadMessageEnd(); err != nil {
      return
    }
    err = error11
    return
  }
  if mTypeId != thrift.REPLY {
    err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "getDevice failed: invalid message type")
    return
  }
  result := WPWithinGetDeviceResult{}
  if err = result.Read(iprot); err != nil {
    return
  }
  if err = iprot.ReadMessageEnd(); err != nil {
    return
  }
  value = result.GetSuccess()
  return
}

// Parameters:
//  - TimeoutMillis
func (p *WPWithinClient) StartServiceBroadcast(timeoutMillis int32) (err error) {
  if err = p.sendStartServiceBroadcast(timeoutMillis); err != nil { return }
  return p.recvStartServiceBroadcast()
}

func (p *WPWithinClient) sendStartServiceBroadcast(timeoutMillis int32)(err error) {
  oprot := p.OutputProtocol
  if oprot == nil {
    oprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.OutputProtocol = oprot
  }
  p.SeqId++
  if err = oprot.WriteMessageBegin("startServiceBroadcast", thrift.CALL, p.SeqId); err != nil {
      return
  }
  args := WPWithinStartServiceBroadcastArgs{
  TimeoutMillis : timeoutMillis,
  }
  if err = args.Write(oprot); err != nil {
      return
  }
  if err = oprot.WriteMessageEnd(); err != nil {
      return
  }
  return oprot.Flush()
}


func (p *WPWithinClient) recvStartServiceBroadcast() (err error) {
  iprot := p.InputProtocol
  if iprot == nil {
    iprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.InputProtocol = iprot
  }
  method, mTypeId, seqId, err := iprot.ReadMessageBegin()
  if err != nil {
    return
  }
  if method != "startServiceBroadcast" {
    err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "startServiceBroadcast failed: wrong method name")
    return
  }
  if p.SeqId != seqId {
    err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "startServiceBroadcast failed: out of sequence response")
    return
  }
  if mTypeId == thrift.EXCEPTION {
    error12 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
    var error13 error
    error13, err = error12.Read(iprot)
    if err != nil {
      return
    }
    if err = iprot.ReadMessageEnd(); err != nil {
      return
    }
    err = error13
    return
  }
  if mTypeId != thrift.REPLY {
    err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "startServiceBroadcast failed: invalid message type")
    return
  }
  result := WPWithinStartServiceBroadcastResult{}
  if err = result.Read(iprot); err != nil {
    return
  }
  if err = iprot.ReadMessageEnd(); err != nil {
    return
  }
  if result.Err != nil {
    err = result.Err
    return 
  }
  return
}

func (p *WPWithinClient) StopServiceBroadcast() (err error) {
  if err = p.sendStopServiceBroadcast(); err != nil { return }
  return p.recvStopServiceBroadcast()
}

func (p *WPWithinClient) sendStopServiceBroadcast()(err error) {
  oprot := p.OutputProtocol
  if oprot == nil {
    oprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.OutputProtocol = oprot
  }
  p.SeqId++
  if err = oprot.WriteMessageBegin("stopServiceBroadcast", thrift.CALL, p.SeqId); err != nil {
      return
  }
  args := WPWithinStopServiceBroadcastArgs{
  }
  if err = args.Write(oprot); err != nil {
      return
  }
  if err = oprot.WriteMessageEnd(); err != nil {
      return
  }
  return oprot.Flush()
}


func (p *WPWithinClient) recvStopServiceBroadcast() (err error) {
  iprot := p.InputProtocol
  if iprot == nil {
    iprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.InputProtocol = iprot
  }
  method, mTypeId, seqId, err := iprot.ReadMessageBegin()
  if err != nil {
    return
  }
  if method != "stopServiceBroadcast" {
    err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "stopServiceBroadcast failed: wrong method name")
    return
  }
  if p.SeqId != seqId {
    err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "stopServiceBroadcast failed: out of sequence response")
    return
  }
  if mTypeId == thrift.EXCEPTION {
    error14 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
    var error15 error
    error15, err = error14.Read(iprot)
    if err != nil {
      return
    }
    if err = iprot.ReadMessageEnd(); err != nil {
      return
    }
    err = error15
    return
  }
  if mTypeId != thrift.REPLY {
    err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "stopServiceBroadcast failed: invalid message type")
    return
  }
  result := WPWithinStopServiceBroadcastResult{}
  if err = result.Read(iprot); err != nil {
    return
  }
  if err = iprot.ReadMessageEnd(); err != nil {
    return
  }
  if result.Err != nil {
    err = result.Err
    return 
  }
  return
}

// Parameters:
//  - TimeoutMillis
func (p *WPWithinClient) DeviceDiscovery(timeoutMillis int32) (r map[*wpthrift_types.ServiceMessage]struct{}, err error) {
  if err = p.sendDeviceDiscovery(timeoutMillis); err != nil { return }
  return p.recvDeviceDiscovery()
}

func (p *WPWithinClient) sendDeviceDiscovery(timeoutMillis int32)(err error) {
  oprot := p.OutputProtocol
  if oprot == nil {
    oprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.OutputProtocol = oprot
  }
  p.SeqId++
  if err = oprot.WriteMessageBegin("deviceDiscovery", thrift.CALL, p.SeqId); err != nil {
      return
  }
  args := WPWithinDeviceDiscoveryArgs{
  TimeoutMillis : timeoutMillis,
  }
  if err = args.Write(oprot); err != nil {
      return
  }
  if err = oprot.WriteMessageEnd(); err != nil {
      return
  }
  return oprot.Flush()
}


func (p *WPWithinClient) recvDeviceDiscovery() (value map[*wpthrift_types.ServiceMessage]struct{}, err error) {
  iprot := p.InputProtocol
  if iprot == nil {
    iprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.InputProtocol = iprot
  }
  method, mTypeId, seqId, err := iprot.ReadMessageBegin()
  if err != nil {
    return
  }
  if method != "deviceDiscovery" {
    err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "deviceDiscovery failed: wrong method name")
    return
  }
  if p.SeqId != seqId {
    err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "deviceDiscovery failed: out of sequence response")
    return
  }
  if mTypeId == thrift.EXCEPTION {
    error16 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
    var error17 error
    error17, err = error16.Read(iprot)
    if err != nil {
      return
    }
    if err = iprot.ReadMessageEnd(); err != nil {
      return
    }
    err = error17
    return
  }
  if mTypeId != thrift.REPLY {
    err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "deviceDiscovery failed: invalid message type")
    return
  }
  result := WPWithinDeviceDiscoveryResult{}
  if err = result.Read(iprot); err != nil {
    return
  }
  if err = iprot.ReadMessageEnd(); err != nil {
    return
  }
  if result.Err != nil {
    err = result.Err
    return 
  }
  value = result.GetSuccess()
  return
}

func (p *WPWithinClient) RequestServices() (r map[*wpthrift_types.ServiceDetails]struct{}, err error) {
  if err = p.sendRequestServices(); err != nil { return }
  return p.recvRequestServices()
}

func (p *WPWithinClient) sendRequestServices()(err error) {
  oprot := p.OutputProtocol
  if oprot == nil {
    oprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.OutputProtocol = oprot
  }
  p.SeqId++
  if err = oprot.WriteMessageBegin("requestServices", thrift.CALL, p.SeqId); err != nil {
      return
  }
  args := WPWithinRequestServicesArgs{
  }
  if err = args.Write(oprot); err != nil {
      return
  }
  if err = oprot.WriteMessageEnd(); err != nil {
      return
  }
  return oprot.Flush()
}


func (p *WPWithinClient) recvRequestServices() (value map[*wpthrift_types.ServiceDetails]struct{}, err error) {
  iprot := p.InputProtocol
  if iprot == nil {
    iprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.InputProtocol = iprot
  }
  method, mTypeId, seqId, err := iprot.ReadMessageBegin()
  if err != nil {
    return
  }
  if method != "requestServices" {
    err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "requestServices failed: wrong method name")
    return
  }
  if p.SeqId != seqId {
    err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "requestServices failed: out of sequence response")
    return
  }
  if mTypeId == thrift.EXCEPTION {
    error18 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
    var error19 error
    error19, err = error18.Read(iprot)
    if err != nil {
      return
    }
    if err = iprot.ReadMessageEnd(); err != nil {
      return
    }
    err = error19
    return
  }
  if mTypeId != thrift.REPLY {
    err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "requestServices failed: invalid message type")
    return
  }
  result := WPWithinRequestServicesResult{}
  if err = result.Read(iprot); err != nil {
    return
  }
  if err = iprot.ReadMessageEnd(); err != nil {
    return
  }
  if result.Err != nil {
    err = result.Err
    return 
  }
  value = result.GetSuccess()
  return
}

// Parameters:
//  - ServiceId
func (p *WPWithinClient) GetServicePrices(serviceId int32) (r map[*wpthrift_types.Price]struct{}, err error) {
  if err = p.sendGetServicePrices(serviceId); err != nil { return }
  return p.recvGetServicePrices()
}

func (p *WPWithinClient) sendGetServicePrices(serviceId int32)(err error) {
  oprot := p.OutputProtocol
  if oprot == nil {
    oprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.OutputProtocol = oprot
  }
  p.SeqId++
  if err = oprot.WriteMessageBegin("getServicePrices", thrift.CALL, p.SeqId); err != nil {
      return
  }
  args := WPWithinGetServicePricesArgs{
  ServiceId : serviceId,
  }
  if err = args.Write(oprot); err != nil {
      return
  }
  if err = oprot.WriteMessageEnd(); err != nil {
      return
  }
  return oprot.Flush()
}


func (p *WPWithinClient) recvGetServicePrices() (value map[*wpthrift_types.Price]struct{}, err error) {
  iprot := p.InputProtocol
  if iprot == nil {
    iprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.InputProtocol = iprot
  }
  method, mTypeId, seqId, err := iprot.ReadMessageBegin()
  if err != nil {
    return
  }
  if method != "getServicePrices" {
    err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "getServicePrices failed: wrong method name")
    return
  }
  if p.SeqId != seqId {
    err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "getServicePrices failed: out of sequence response")
    return
  }
  if mTypeId == thrift.EXCEPTION {
    error20 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
    var error21 error
    error21, err = error20.Read(iprot)
    if err != nil {
      return
    }
    if err = iprot.ReadMessageEnd(); err != nil {
      return
    }
    err = error21
    return
  }
  if mTypeId != thrift.REPLY {
    err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "getServicePrices failed: invalid message type")
    return
  }
  result := WPWithinGetServicePricesResult{}
  if err = result.Read(iprot); err != nil {
    return
  }
  if err = iprot.ReadMessageEnd(); err != nil {
    return
  }
  if result.Err != nil {
    err = result.Err
    return 
  }
  value = result.GetSuccess()
  return
}

// Parameters:
//  - ServiceId
//  - NumberOfUnits
//  - PriceId
func (p *WPWithinClient) SelectService(serviceId int32, numberOfUnits int32, priceId int32) (r *wpthrift_types.TotalPriceResponse, err error) {
  if err = p.sendSelectService(serviceId, numberOfUnits, priceId); err != nil { return }
  return p.recvSelectService()
}

func (p *WPWithinClient) sendSelectService(serviceId int32, numberOfUnits int32, priceId int32)(err error) {
  oprot := p.OutputProtocol
  if oprot == nil {
    oprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.OutputProtocol = oprot
  }
  p.SeqId++
  if err = oprot.WriteMessageBegin("selectService", thrift.CALL, p.SeqId); err != nil {
      return
  }
  args := WPWithinSelectServiceArgs{
  ServiceId : serviceId,
  NumberOfUnits : numberOfUnits,
  PriceId : priceId,
  }
  if err = args.Write(oprot); err != nil {
      return
  }
  if err = oprot.WriteMessageEnd(); err != nil {
      return
  }
  return oprot.Flush()
}


func (p *WPWithinClient) recvSelectService() (value *wpthrift_types.TotalPriceResponse, err error) {
  iprot := p.InputProtocol
  if iprot == nil {
    iprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.InputProtocol = iprot
  }
  method, mTypeId, seqId, err := iprot.ReadMessageBegin()
  if err != nil {
    return
  }
  if method != "selectService" {
    err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "selectService failed: wrong method name")
    return
  }
  if p.SeqId != seqId {
    err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "selectService failed: out of sequence response")
    return
  }
  if mTypeId == thrift.EXCEPTION {
    error22 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
    var error23 error
    error23, err = error22.Read(iprot)
    if err != nil {
      return
    }
    if err = iprot.ReadMessageEnd(); err != nil {
      return
    }
    err = error23
    return
  }
  if mTypeId != thrift.REPLY {
    err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "selectService failed: invalid message type")
    return
  }
  result := WPWithinSelectServiceResult{}
  if err = result.Read(iprot); err != nil {
    return
  }
  if err = iprot.ReadMessageEnd(); err != nil {
    return
  }
  if result.Err != nil {
    err = result.Err
    return 
  }
  value = result.GetSuccess()
  return
}

// Parameters:
//  - Request
func (p *WPWithinClient) MakePayment(request *wpthrift_types.TotalPriceResponse) (r *wpthrift_types.PaymentResponse, err error) {
  if err = p.sendMakePayment(request); err != nil { return }
  return p.recvMakePayment()
}

func (p *WPWithinClient) sendMakePayment(request *wpthrift_types.TotalPriceResponse)(err error) {
  oprot := p.OutputProtocol
  if oprot == nil {
    oprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.OutputProtocol = oprot
  }
  p.SeqId++
  if err = oprot.WriteMessageBegin("makePayment", thrift.CALL, p.SeqId); err != nil {
      return
  }
  args := WPWithinMakePaymentArgs{
  Request : request,
  }
  if err = args.Write(oprot); err != nil {
      return
  }
  if err = oprot.WriteMessageEnd(); err != nil {
      return
  }
  return oprot.Flush()
}


func (p *WPWithinClient) recvMakePayment() (value *wpthrift_types.PaymentResponse, err error) {
  iprot := p.InputProtocol
  if iprot == nil {
    iprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.InputProtocol = iprot
  }
  method, mTypeId, seqId, err := iprot.ReadMessageBegin()
  if err != nil {
    return
  }
  if method != "makePayment" {
    err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "makePayment failed: wrong method name")
    return
  }
  if p.SeqId != seqId {
    err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "makePayment failed: out of sequence response")
    return
  }
  if mTypeId == thrift.EXCEPTION {
    error24 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
    var error25 error
    error25, err = error24.Read(iprot)
    if err != nil {
      return
    }
    if err = iprot.ReadMessageEnd(); err != nil {
      return
    }
    err = error25
    return
  }
  if mTypeId != thrift.REPLY {
    err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "makePayment failed: invalid message type")
    return
  }
  result := WPWithinMakePaymentResult{}
  if err = result.Read(iprot); err != nil {
    return
  }
  if err = iprot.ReadMessageEnd(); err != nil {
    return
  }
  if result.Err != nil {
    err = result.Err
    return 
  }
  value = result.GetSuccess()
  return
}

// Parameters:
//  - ServiceID
//  - ServiceDeliveryToken
//  - UnitsToSupply
func (p *WPWithinClient) BeginServiceDelivery(serviceID int32, serviceDeliveryToken *wpthrift_types.ServiceDeliveryToken, unitsToSupply int32) (r *wpthrift_types.ServiceDeliveryToken, err error) {
  if err = p.sendBeginServiceDelivery(serviceID, serviceDeliveryToken, unitsToSupply); err != nil { return }
  return p.recvBeginServiceDelivery()
}

func (p *WPWithinClient) sendBeginServiceDelivery(serviceID int32, serviceDeliveryToken *wpthrift_types.ServiceDeliveryToken, unitsToSupply int32)(err error) {
  oprot := p.OutputProtocol
  if oprot == nil {
    oprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.OutputProtocol = oprot
  }
  p.SeqId++
  if err = oprot.WriteMessageBegin("beginServiceDelivery", thrift.CALL, p.SeqId); err != nil {
      return
  }
  args := WPWithinBeginServiceDeliveryArgs{
  ServiceID : serviceID,
  ServiceDeliveryToken : serviceDeliveryToken,
  UnitsToSupply : unitsToSupply,
  }
  if err = args.Write(oprot); err != nil {
      return
  }
  if err = oprot.WriteMessageEnd(); err != nil {
      return
  }
  return oprot.Flush()
}


func (p *WPWithinClient) recvBeginServiceDelivery() (value *wpthrift_types.ServiceDeliveryToken, err error) {
  iprot := p.InputProtocol
  if iprot == nil {
    iprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.InputProtocol = iprot
  }
  method, mTypeId, seqId, err := iprot.ReadMessageBegin()
  if err != nil {
    return
  }
  if method != "beginServiceDelivery" {
    err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "beginServiceDelivery failed: wrong method name")
    return
  }
  if p.SeqId != seqId {
    err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "beginServiceDelivery failed: out of sequence response")
    return
  }
  if mTypeId == thrift.EXCEPTION {
    error26 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
    var error27 error
    error27, err = error26.Read(iprot)
    if err != nil {
      return
    }
    if err = iprot.ReadMessageEnd(); err != nil {
      return
    }
    err = error27
    return
  }
  if mTypeId != thrift.REPLY {
    err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "beginServiceDelivery failed: invalid message type")
    return
  }
  result := WPWithinBeginServiceDeliveryResult{}
  if err = result.Read(iprot); err != nil {
    return
  }
  if err = iprot.ReadMessageEnd(); err != nil {
    return
  }
  if result.Err != nil {
    err = result.Err
    return 
  }
  value = result.GetSuccess()
  return
}

// Parameters:
//  - ServiceID
//  - ServiceDeliveryToken
//  - UnitsReceived
func (p *WPWithinClient) EndServiceDelivery(serviceID int32, serviceDeliveryToken *wpthrift_types.ServiceDeliveryToken, unitsReceived int32) (r *wpthrift_types.ServiceDeliveryToken, err error) {
  if err = p.sendEndServiceDelivery(serviceID, serviceDeliveryToken, unitsReceived); err != nil { return }
  return p.recvEndServiceDelivery()
}

func (p *WPWithinClient) sendEndServiceDelivery(serviceID int32, serviceDeliveryToken *wpthrift_types.ServiceDeliveryToken, unitsReceived int32)(err error) {
  oprot := p.OutputProtocol
  if oprot == nil {
    oprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.OutputProtocol = oprot
  }
  p.SeqId++
  if err = oprot.WriteMessageBegin("endServiceDelivery", thrift.CALL, p.SeqId); err != nil {
      return
  }
  args := WPWithinEndServiceDeliveryArgs{
  ServiceID : serviceID,
  ServiceDeliveryToken : serviceDeliveryToken,
  UnitsReceived : unitsReceived,
  }
  if err = args.Write(oprot); err != nil {
      return
  }
  if err = oprot.WriteMessageEnd(); err != nil {
      return
  }
  return oprot.Flush()
}


func (p *WPWithinClient) recvEndServiceDelivery() (value *wpthrift_types.ServiceDeliveryToken, err error) {
  iprot := p.InputProtocol
  if iprot == nil {
    iprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.InputProtocol = iprot
  }
  method, mTypeId, seqId, err := iprot.ReadMessageBegin()
  if err != nil {
    return
  }
  if method != "endServiceDelivery" {
    err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "endServiceDelivery failed: wrong method name")
    return
  }
  if p.SeqId != seqId {
    err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "endServiceDelivery failed: out of sequence response")
    return
  }
  if mTypeId == thrift.EXCEPTION {
    error28 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
    var error29 error
    error29, err = error28.Read(iprot)
    if err != nil {
      return
    }
    if err = iprot.ReadMessageEnd(); err != nil {
      return
    }
    err = error29
    return
  }
  if mTypeId != thrift.REPLY {
    err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "endServiceDelivery failed: invalid message type")
    return
  }
  result := WPWithinEndServiceDeliveryResult{}
  if err = result.Read(iprot); err != nil {
    return
  }
  if err = iprot.ReadMessageEnd(); err != nil {
    return
  }
  if result.Err != nil {
    err = result.Err
    return 
  }
  value = result.GetSuccess()
  return
}


type WPWithinProcessor struct {
  processorMap map[string]thrift.TProcessorFunction
  handler WPWithin
}

func (p *WPWithinProcessor) AddToProcessorMap(key string, processor thrift.TProcessorFunction) {
  p.processorMap[key] = processor
}

func (p *WPWithinProcessor) GetProcessorFunction(key string) (processor thrift.TProcessorFunction, ok bool) {
  processor, ok = p.processorMap[key]
  return processor, ok
}

func (p *WPWithinProcessor) ProcessorMap() map[string]thrift.TProcessorFunction {
  return p.processorMap
}

func NewWPWithinProcessor(handler WPWithin) *WPWithinProcessor {

  self30 := &WPWithinProcessor{handler:handler, processorMap:make(map[string]thrift.TProcessorFunction)}
  self30.processorMap["setup"] = &wPWithinProcessorSetup{handler:handler}
  self30.processorMap["addService"] = &wPWithinProcessorAddService{handler:handler}
  self30.processorMap["removeService"] = &wPWithinProcessorRemoveService{handler:handler}
  self30.processorMap["initConsumer"] = &wPWithinProcessorInitConsumer{handler:handler}
  self30.processorMap["initProducer"] = &wPWithinProcessorInitProducer{handler:handler}
  self30.processorMap["getDevice"] = &wPWithinProcessorGetDevice{handler:handler}
  self30.processorMap["startServiceBroadcast"] = &wPWithinProcessorStartServiceBroadcast{handler:handler}
  self30.processorMap["stopServiceBroadcast"] = &wPWithinProcessorStopServiceBroadcast{handler:handler}
  self30.processorMap["deviceDiscovery"] = &wPWithinProcessorDeviceDiscovery{handler:handler}
  self30.processorMap["requestServices"] = &wPWithinProcessorRequestServices{handler:handler}
  self30.processorMap["getServicePrices"] = &wPWithinProcessorGetServicePrices{handler:handler}
  self30.processorMap["selectService"] = &wPWithinProcessorSelectService{handler:handler}
  self30.processorMap["makePayment"] = &wPWithinProcessorMakePayment{handler:handler}
  self30.processorMap["beginServiceDelivery"] = &wPWithinProcessorBeginServiceDelivery{handler:handler}
  self30.processorMap["endServiceDelivery"] = &wPWithinProcessorEndServiceDelivery{handler:handler}
return self30
}

func (p *WPWithinProcessor) Process(iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  name, _, seqId, err := iprot.ReadMessageBegin()
  if err != nil { return false, err }
  if processor, ok := p.GetProcessorFunction(name); ok {
    return processor.Process(seqId, iprot, oprot)
  }
  iprot.Skip(thrift.STRUCT)
  iprot.ReadMessageEnd()
  x31 := thrift.NewTApplicationException(thrift.UNKNOWN_METHOD, "Unknown function " + name)
  oprot.WriteMessageBegin(name, thrift.EXCEPTION, seqId)
  x31.Write(oprot)
  oprot.WriteMessageEnd()
  oprot.Flush()
  return false, x31

}

type wPWithinProcessorSetup struct {
  handler WPWithin
}

func (p *wPWithinProcessorSetup) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := WPWithinSetupArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("setup", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := WPWithinSetupResult{}
  var err2 error
  if err2 = p.handler.Setup(args.Name, args.Description); err2 != nil {
  switch v := err2.(type) {
    case *wpthrift_types.Error:
  result.Err = v
    default:
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing setup: " + err2.Error())
    oprot.WriteMessageBegin("setup", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  }
  }
  if err2 = oprot.WriteMessageBegin("setup", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type wPWithinProcessorAddService struct {
  handler WPWithin
}

func (p *wPWithinProcessorAddService) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := WPWithinAddServiceArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("addService", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := WPWithinAddServiceResult{}
  var err2 error
  if err2 = p.handler.AddService(args.Svc); err2 != nil {
  switch v := err2.(type) {
    case *wpthrift_types.Error:
  result.Err = v
    default:
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing addService: " + err2.Error())
    oprot.WriteMessageBegin("addService", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  }
  }
  if err2 = oprot.WriteMessageBegin("addService", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type wPWithinProcessorRemoveService struct {
  handler WPWithin
}

func (p *wPWithinProcessorRemoveService) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := WPWithinRemoveServiceArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("removeService", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := WPWithinRemoveServiceResult{}
  var err2 error
  if err2 = p.handler.RemoveService(args.Svc); err2 != nil {
  switch v := err2.(type) {
    case *wpthrift_types.Error:
  result.Err = v
    default:
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing removeService: " + err2.Error())
    oprot.WriteMessageBegin("removeService", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  }
  }
  if err2 = oprot.WriteMessageBegin("removeService", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type wPWithinProcessorInitConsumer struct {
  handler WPWithin
}

func (p *wPWithinProcessorInitConsumer) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := WPWithinInitConsumerArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("initConsumer", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := WPWithinInitConsumerResult{}
  var err2 error
  if err2 = p.handler.InitConsumer(args.Scheme, args.Hostname, args.Port, args.UrlPrefix, args.ClientID, args.HceCard, args.PspConfig); err2 != nil {
  switch v := err2.(type) {
    case *wpthrift_types.Error:
  result.Err = v
    default:
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing initConsumer: " + err2.Error())
    oprot.WriteMessageBegin("initConsumer", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  }
  }
  if err2 = oprot.WriteMessageBegin("initConsumer", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type wPWithinProcessorInitProducer struct {
  handler WPWithin
}

func (p *wPWithinProcessorInitProducer) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := WPWithinInitProducerArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("initProducer", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := WPWithinInitProducerResult{}
  var err2 error
  if err2 = p.handler.InitProducer(args.PspConfig); err2 != nil {
  switch v := err2.(type) {
    case *wpthrift_types.Error:
  result.Err = v
    default:
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing initProducer: " + err2.Error())
    oprot.WriteMessageBegin("initProducer", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  }
  }
  if err2 = oprot.WriteMessageBegin("initProducer", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type wPWithinProcessorGetDevice struct {
  handler WPWithin
}

func (p *wPWithinProcessorGetDevice) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := WPWithinGetDeviceArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("getDevice", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := WPWithinGetDeviceResult{}
var retval *wpthrift_types.Device
  var err2 error
  if retval, err2 = p.handler.GetDevice(); err2 != nil {
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing getDevice: " + err2.Error())
    oprot.WriteMessageBegin("getDevice", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  } else {
    result.Success = retval
}
  if err2 = oprot.WriteMessageBegin("getDevice", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type wPWithinProcessorStartServiceBroadcast struct {
  handler WPWithin
}

func (p *wPWithinProcessorStartServiceBroadcast) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := WPWithinStartServiceBroadcastArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("startServiceBroadcast", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := WPWithinStartServiceBroadcastResult{}
  var err2 error
  if err2 = p.handler.StartServiceBroadcast(args.TimeoutMillis); err2 != nil {
  switch v := err2.(type) {
    case *wpthrift_types.Error:
  result.Err = v
    default:
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing startServiceBroadcast: " + err2.Error())
    oprot.WriteMessageBegin("startServiceBroadcast", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  }
  }
  if err2 = oprot.WriteMessageBegin("startServiceBroadcast", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type wPWithinProcessorStopServiceBroadcast struct {
  handler WPWithin
}

func (p *wPWithinProcessorStopServiceBroadcast) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := WPWithinStopServiceBroadcastArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("stopServiceBroadcast", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := WPWithinStopServiceBroadcastResult{}
  var err2 error
  if err2 = p.handler.StopServiceBroadcast(); err2 != nil {
  switch v := err2.(type) {
    case *wpthrift_types.Error:
  result.Err = v
    default:
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing stopServiceBroadcast: " + err2.Error())
    oprot.WriteMessageBegin("stopServiceBroadcast", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  }
  }
  if err2 = oprot.WriteMessageBegin("stopServiceBroadcast", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type wPWithinProcessorDeviceDiscovery struct {
  handler WPWithin
}

func (p *wPWithinProcessorDeviceDiscovery) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := WPWithinDeviceDiscoveryArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("deviceDiscovery", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := WPWithinDeviceDiscoveryResult{}
var retval map[*wpthrift_types.ServiceMessage]struct{}
  var err2 error
  if retval, err2 = p.handler.DeviceDiscovery(args.TimeoutMillis); err2 != nil {
  switch v := err2.(type) {
    case *wpthrift_types.Error:
  result.Err = v
    default:
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing deviceDiscovery: " + err2.Error())
    oprot.WriteMessageBegin("deviceDiscovery", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  }
  } else {
    result.Success = retval
}
  if err2 = oprot.WriteMessageBegin("deviceDiscovery", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type wPWithinProcessorRequestServices struct {
  handler WPWithin
}

func (p *wPWithinProcessorRequestServices) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := WPWithinRequestServicesArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("requestServices", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := WPWithinRequestServicesResult{}
var retval map[*wpthrift_types.ServiceDetails]struct{}
  var err2 error
  if retval, err2 = p.handler.RequestServices(); err2 != nil {
  switch v := err2.(type) {
    case *wpthrift_types.Error:
  result.Err = v
    default:
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing requestServices: " + err2.Error())
    oprot.WriteMessageBegin("requestServices", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  }
  } else {
    result.Success = retval
}
  if err2 = oprot.WriteMessageBegin("requestServices", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type wPWithinProcessorGetServicePrices struct {
  handler WPWithin
}

func (p *wPWithinProcessorGetServicePrices) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := WPWithinGetServicePricesArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("getServicePrices", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := WPWithinGetServicePricesResult{}
var retval map[*wpthrift_types.Price]struct{}
  var err2 error
  if retval, err2 = p.handler.GetServicePrices(args.ServiceId); err2 != nil {
  switch v := err2.(type) {
    case *wpthrift_types.Error:
  result.Err = v
    default:
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing getServicePrices: " + err2.Error())
    oprot.WriteMessageBegin("getServicePrices", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  }
  } else {
    result.Success = retval
}
  if err2 = oprot.WriteMessageBegin("getServicePrices", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type wPWithinProcessorSelectService struct {
  handler WPWithin
}

func (p *wPWithinProcessorSelectService) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := WPWithinSelectServiceArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("selectService", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := WPWithinSelectServiceResult{}
var retval *wpthrift_types.TotalPriceResponse
  var err2 error
  if retval, err2 = p.handler.SelectService(args.ServiceId, args.NumberOfUnits, args.PriceId); err2 != nil {
  switch v := err2.(type) {
    case *wpthrift_types.Error:
  result.Err = v
    default:
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing selectService: " + err2.Error())
    oprot.WriteMessageBegin("selectService", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  }
  } else {
    result.Success = retval
}
  if err2 = oprot.WriteMessageBegin("selectService", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type wPWithinProcessorMakePayment struct {
  handler WPWithin
}

func (p *wPWithinProcessorMakePayment) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := WPWithinMakePaymentArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("makePayment", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := WPWithinMakePaymentResult{}
var retval *wpthrift_types.PaymentResponse
  var err2 error
  if retval, err2 = p.handler.MakePayment(args.Request); err2 != nil {
  switch v := err2.(type) {
    case *wpthrift_types.Error:
  result.Err = v
    default:
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing makePayment: " + err2.Error())
    oprot.WriteMessageBegin("makePayment", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  }
  } else {
    result.Success = retval
}
  if err2 = oprot.WriteMessageBegin("makePayment", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type wPWithinProcessorBeginServiceDelivery struct {
  handler WPWithin
}

func (p *wPWithinProcessorBeginServiceDelivery) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := WPWithinBeginServiceDeliveryArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("beginServiceDelivery", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := WPWithinBeginServiceDeliveryResult{}
var retval *wpthrift_types.ServiceDeliveryToken
  var err2 error
  if retval, err2 = p.handler.BeginServiceDelivery(args.ServiceID, args.ServiceDeliveryToken, args.UnitsToSupply); err2 != nil {
  switch v := err2.(type) {
    case *wpthrift_types.Error:
  result.Err = v
    default:
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing beginServiceDelivery: " + err2.Error())
    oprot.WriteMessageBegin("beginServiceDelivery", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  }
  } else {
    result.Success = retval
}
  if err2 = oprot.WriteMessageBegin("beginServiceDelivery", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type wPWithinProcessorEndServiceDelivery struct {
  handler WPWithin
}

func (p *wPWithinProcessorEndServiceDelivery) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := WPWithinEndServiceDeliveryArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("endServiceDelivery", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := WPWithinEndServiceDeliveryResult{}
var retval *wpthrift_types.ServiceDeliveryToken
  var err2 error
  if retval, err2 = p.handler.EndServiceDelivery(args.ServiceID, args.ServiceDeliveryToken, args.UnitsReceived); err2 != nil {
  switch v := err2.(type) {
    case *wpthrift_types.Error:
  result.Err = v
    default:
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing endServiceDelivery: " + err2.Error())
    oprot.WriteMessageBegin("endServiceDelivery", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  }
  } else {
    result.Success = retval
}
  if err2 = oprot.WriteMessageBegin("endServiceDelivery", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}


// HELPER FUNCTIONS AND STRUCTURES

// Attributes:
//  - Name
//  - Description
type WPWithinSetupArgs struct {
  Name string `thrift:"name,1" db:"name" json:"name"`
  Description string `thrift:"description,2" db:"description" json:"description"`
}

func NewWPWithinSetupArgs() *WPWithinSetupArgs {
  return &WPWithinSetupArgs{}
}


func (p *WPWithinSetupArgs) GetName() string {
  return p.Name
}

func (p *WPWithinSetupArgs) GetDescription() string {
  return p.Description
}
func (p *WPWithinSetupArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    case 2:
      if err := p.ReadField2(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinSetupArgs)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.Name = v
}
  return nil
}

func (p *WPWithinSetupArgs)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.Description = v
}
  return nil
}

func (p *WPWithinSetupArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("setup_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinSetupArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("name", thrift.STRING, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:name: ", p), err) }
  if err := oprot.WriteString(string(p.Name)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.name (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:name: ", p), err) }
  return err
}

func (p *WPWithinSetupArgs) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("description", thrift.STRING, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:description: ", p), err) }
  if err := oprot.WriteString(string(p.Description)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.description (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:description: ", p), err) }
  return err
}

func (p *WPWithinSetupArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinSetupArgs(%+v)", *p)
}

// Attributes:
//  - Err
type WPWithinSetupResult struct {
  Err *wpthrift_types.Error `thrift:"err,1" db:"err" json:"err,omitempty"`
}

func NewWPWithinSetupResult() *WPWithinSetupResult {
  return &WPWithinSetupResult{}
}

var WPWithinSetupResult_Err_DEFAULT *wpthrift_types.Error
func (p *WPWithinSetupResult) GetErr() *wpthrift_types.Error {
  if !p.IsSetErr() {
    return WPWithinSetupResult_Err_DEFAULT
  }
return p.Err
}
func (p *WPWithinSetupResult) IsSetErr() bool {
  return p.Err != nil
}

func (p *WPWithinSetupResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinSetupResult)  ReadField1(iprot thrift.TProtocol) error {
  p.Err = &wpthrift_types.Error{}
  if err := p.Err.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Err), err)
  }
  return nil
}

func (p *WPWithinSetupResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("setup_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinSetupResult) writeField1(oprot thrift.TProtocol) (err error) {
  if p.IsSetErr() {
    if err := oprot.WriteFieldBegin("err", thrift.STRUCT, 1); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:err: ", p), err) }
    if err := p.Err.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Err), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 1:err: ", p), err) }
  }
  return err
}

func (p *WPWithinSetupResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinSetupResult(%+v)", *p)
}

// Attributes:
//  - Svc
type WPWithinAddServiceArgs struct {
  Svc *wpthrift_types.Service `thrift:"svc,1" db:"svc" json:"svc"`
}

func NewWPWithinAddServiceArgs() *WPWithinAddServiceArgs {
  return &WPWithinAddServiceArgs{}
}

var WPWithinAddServiceArgs_Svc_DEFAULT *wpthrift_types.Service
func (p *WPWithinAddServiceArgs) GetSvc() *wpthrift_types.Service {
  if !p.IsSetSvc() {
    return WPWithinAddServiceArgs_Svc_DEFAULT
  }
return p.Svc
}
func (p *WPWithinAddServiceArgs) IsSetSvc() bool {
  return p.Svc != nil
}

func (p *WPWithinAddServiceArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinAddServiceArgs)  ReadField1(iprot thrift.TProtocol) error {
  p.Svc = &wpthrift_types.Service{}
  if err := p.Svc.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Svc), err)
  }
  return nil
}

func (p *WPWithinAddServiceArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("addService_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinAddServiceArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("svc", thrift.STRUCT, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:svc: ", p), err) }
  if err := p.Svc.Write(oprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Svc), err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:svc: ", p), err) }
  return err
}

func (p *WPWithinAddServiceArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinAddServiceArgs(%+v)", *p)
}

// Attributes:
//  - Err
type WPWithinAddServiceResult struct {
  Err *wpthrift_types.Error `thrift:"err,1" db:"err" json:"err,omitempty"`
}

func NewWPWithinAddServiceResult() *WPWithinAddServiceResult {
  return &WPWithinAddServiceResult{}
}

var WPWithinAddServiceResult_Err_DEFAULT *wpthrift_types.Error
func (p *WPWithinAddServiceResult) GetErr() *wpthrift_types.Error {
  if !p.IsSetErr() {
    return WPWithinAddServiceResult_Err_DEFAULT
  }
return p.Err
}
func (p *WPWithinAddServiceResult) IsSetErr() bool {
  return p.Err != nil
}

func (p *WPWithinAddServiceResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinAddServiceResult)  ReadField1(iprot thrift.TProtocol) error {
  p.Err = &wpthrift_types.Error{}
  if err := p.Err.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Err), err)
  }
  return nil
}

func (p *WPWithinAddServiceResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("addService_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinAddServiceResult) writeField1(oprot thrift.TProtocol) (err error) {
  if p.IsSetErr() {
    if err := oprot.WriteFieldBegin("err", thrift.STRUCT, 1); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:err: ", p), err) }
    if err := p.Err.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Err), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 1:err: ", p), err) }
  }
  return err
}

func (p *WPWithinAddServiceResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinAddServiceResult(%+v)", *p)
}

// Attributes:
//  - Svc
type WPWithinRemoveServiceArgs struct {
  Svc *wpthrift_types.Service `thrift:"svc,1" db:"svc" json:"svc"`
}

func NewWPWithinRemoveServiceArgs() *WPWithinRemoveServiceArgs {
  return &WPWithinRemoveServiceArgs{}
}

var WPWithinRemoveServiceArgs_Svc_DEFAULT *wpthrift_types.Service
func (p *WPWithinRemoveServiceArgs) GetSvc() *wpthrift_types.Service {
  if !p.IsSetSvc() {
    return WPWithinRemoveServiceArgs_Svc_DEFAULT
  }
return p.Svc
}
func (p *WPWithinRemoveServiceArgs) IsSetSvc() bool {
  return p.Svc != nil
}

func (p *WPWithinRemoveServiceArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinRemoveServiceArgs)  ReadField1(iprot thrift.TProtocol) error {
  p.Svc = &wpthrift_types.Service{}
  if err := p.Svc.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Svc), err)
  }
  return nil
}

func (p *WPWithinRemoveServiceArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("removeService_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinRemoveServiceArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("svc", thrift.STRUCT, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:svc: ", p), err) }
  if err := p.Svc.Write(oprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Svc), err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:svc: ", p), err) }
  return err
}

func (p *WPWithinRemoveServiceArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinRemoveServiceArgs(%+v)", *p)
}

// Attributes:
//  - Err
type WPWithinRemoveServiceResult struct {
  Err *wpthrift_types.Error `thrift:"err,1" db:"err" json:"err,omitempty"`
}

func NewWPWithinRemoveServiceResult() *WPWithinRemoveServiceResult {
  return &WPWithinRemoveServiceResult{}
}

var WPWithinRemoveServiceResult_Err_DEFAULT *wpthrift_types.Error
func (p *WPWithinRemoveServiceResult) GetErr() *wpthrift_types.Error {
  if !p.IsSetErr() {
    return WPWithinRemoveServiceResult_Err_DEFAULT
  }
return p.Err
}
func (p *WPWithinRemoveServiceResult) IsSetErr() bool {
  return p.Err != nil
}

func (p *WPWithinRemoveServiceResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinRemoveServiceResult)  ReadField1(iprot thrift.TProtocol) error {
  p.Err = &wpthrift_types.Error{}
  if err := p.Err.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Err), err)
  }
  return nil
}

func (p *WPWithinRemoveServiceResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("removeService_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinRemoveServiceResult) writeField1(oprot thrift.TProtocol) (err error) {
  if p.IsSetErr() {
    if err := oprot.WriteFieldBegin("err", thrift.STRUCT, 1); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:err: ", p), err) }
    if err := p.Err.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Err), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 1:err: ", p), err) }
  }
  return err
}

func (p *WPWithinRemoveServiceResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinRemoveServiceResult(%+v)", *p)
}

// Attributes:
//  - Scheme
//  - Hostname
//  - Port
//  - UrlPrefix
//  - ClientID
//  - HceCard
//  - PspConfig
type WPWithinInitConsumerArgs struct {
  Scheme string `thrift:"scheme,1" db:"scheme" json:"scheme"`
  Hostname string `thrift:"hostname,2" db:"hostname" json:"hostname"`
  Port int32 `thrift:"port,3" db:"port" json:"port"`
  UrlPrefix string `thrift:"urlPrefix,4" db:"urlPrefix" json:"urlPrefix"`
  ClientID string `thrift:"clientID,5" db:"clientID" json:"clientID"`
  HceCard *wpthrift_types.HCECard `thrift:"hceCard,6" db:"hceCard" json:"hceCard"`
  PspConfig map[string]string `thrift:"pspConfig,7" db:"pspConfig" json:"pspConfig"`
}

func NewWPWithinInitConsumerArgs() *WPWithinInitConsumerArgs {
  return &WPWithinInitConsumerArgs{}
}


func (p *WPWithinInitConsumerArgs) GetScheme() string {
  return p.Scheme
}

func (p *WPWithinInitConsumerArgs) GetHostname() string {
  return p.Hostname
}

func (p *WPWithinInitConsumerArgs) GetPort() int32 {
  return p.Port
}

func (p *WPWithinInitConsumerArgs) GetUrlPrefix() string {
  return p.UrlPrefix
}

func (p *WPWithinInitConsumerArgs) GetClientID() string {
  return p.ClientID
}
var WPWithinInitConsumerArgs_HceCard_DEFAULT *wpthrift_types.HCECard
func (p *WPWithinInitConsumerArgs) GetHceCard() *wpthrift_types.HCECard {
  if !p.IsSetHceCard() {
    return WPWithinInitConsumerArgs_HceCard_DEFAULT
  }
return p.HceCard
}

func (p *WPWithinInitConsumerArgs) GetPspConfig() map[string]string {
  return p.PspConfig
}
func (p *WPWithinInitConsumerArgs) IsSetHceCard() bool {
  return p.HceCard != nil
}

func (p *WPWithinInitConsumerArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    case 2:
      if err := p.ReadField2(iprot); err != nil {
        return err
      }
    case 3:
      if err := p.ReadField3(iprot); err != nil {
        return err
      }
    case 4:
      if err := p.ReadField4(iprot); err != nil {
        return err
      }
    case 5:
      if err := p.ReadField5(iprot); err != nil {
        return err
      }
    case 6:
      if err := p.ReadField6(iprot); err != nil {
        return err
      }
    case 7:
      if err := p.ReadField7(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinInitConsumerArgs)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.Scheme = v
}
  return nil
}

func (p *WPWithinInitConsumerArgs)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.Hostname = v
}
  return nil
}

func (p *WPWithinInitConsumerArgs)  ReadField3(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 3: ", err)
} else {
  p.Port = v
}
  return nil
}

func (p *WPWithinInitConsumerArgs)  ReadField4(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 4: ", err)
} else {
  p.UrlPrefix = v
}
  return nil
}

func (p *WPWithinInitConsumerArgs)  ReadField5(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 5: ", err)
} else {
  p.ClientID = v
}
  return nil
}

func (p *WPWithinInitConsumerArgs)  ReadField6(iprot thrift.TProtocol) error {
  p.HceCard = &wpthrift_types.HCECard{}
  if err := p.HceCard.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.HceCard), err)
  }
  return nil
}

func (p *WPWithinInitConsumerArgs)  ReadField7(iprot thrift.TProtocol) error {
  _, _, size, err := iprot.ReadMapBegin()
  if err != nil {
    return thrift.PrependError("error reading map begin: ", err)
  }
  tMap := make(map[string]string, size)
  p.PspConfig =  tMap
  for i := 0; i < size; i ++ {
var _key32 string
    if v, err := iprot.ReadString(); err != nil {
    return thrift.PrependError("error reading field 0: ", err)
} else {
    _key32 = v
}
var _val33 string
    if v, err := iprot.ReadString(); err != nil {
    return thrift.PrependError("error reading field 0: ", err)
} else {
    _val33 = v
}
    p.PspConfig[_key32] = _val33
  }
  if err := iprot.ReadMapEnd(); err != nil {
    return thrift.PrependError("error reading map end: ", err)
  }
  return nil
}

func (p *WPWithinInitConsumerArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("initConsumer_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
    if err := p.writeField4(oprot); err != nil { return err }
    if err := p.writeField5(oprot); err != nil { return err }
    if err := p.writeField6(oprot); err != nil { return err }
    if err := p.writeField7(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinInitConsumerArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("scheme", thrift.STRING, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:scheme: ", p), err) }
  if err := oprot.WriteString(string(p.Scheme)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.scheme (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:scheme: ", p), err) }
  return err
}

func (p *WPWithinInitConsumerArgs) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("hostname", thrift.STRING, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:hostname: ", p), err) }
  if err := oprot.WriteString(string(p.Hostname)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.hostname (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:hostname: ", p), err) }
  return err
}

func (p *WPWithinInitConsumerArgs) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("port", thrift.I32, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:port: ", p), err) }
  if err := oprot.WriteI32(int32(p.Port)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.port (3) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:port: ", p), err) }
  return err
}

func (p *WPWithinInitConsumerArgs) writeField4(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("urlPrefix", thrift.STRING, 4); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:urlPrefix: ", p), err) }
  if err := oprot.WriteString(string(p.UrlPrefix)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.urlPrefix (4) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 4:urlPrefix: ", p), err) }
  return err
}

func (p *WPWithinInitConsumerArgs) writeField5(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("clientID", thrift.STRING, 5); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:clientID: ", p), err) }
  if err := oprot.WriteString(string(p.ClientID)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.clientID (5) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 5:clientID: ", p), err) }
  return err
}

func (p *WPWithinInitConsumerArgs) writeField6(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("hceCard", thrift.STRUCT, 6); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:hceCard: ", p), err) }
  if err := p.HceCard.Write(oprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.HceCard), err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 6:hceCard: ", p), err) }
  return err
}

func (p *WPWithinInitConsumerArgs) writeField7(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("pspConfig", thrift.MAP, 7); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:pspConfig: ", p), err) }
  if err := oprot.WriteMapBegin(thrift.STRING, thrift.STRING, len(p.PspConfig)); err != nil {
    return thrift.PrependError("error writing map begin: ", err)
  }
  for k, v := range p.PspConfig {
    if err := oprot.WriteString(string(k)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T. (0) field write error: ", p), err) }
    if err := oprot.WriteString(string(v)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T. (0) field write error: ", p), err) }
  }
  if err := oprot.WriteMapEnd(); err != nil {
    return thrift.PrependError("error writing map end: ", err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 7:pspConfig: ", p), err) }
  return err
}

func (p *WPWithinInitConsumerArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinInitConsumerArgs(%+v)", *p)
}

// Attributes:
//  - Err
type WPWithinInitConsumerResult struct {
  Err *wpthrift_types.Error `thrift:"err,1" db:"err" json:"err,omitempty"`
}

func NewWPWithinInitConsumerResult() *WPWithinInitConsumerResult {
  return &WPWithinInitConsumerResult{}
}

var WPWithinInitConsumerResult_Err_DEFAULT *wpthrift_types.Error
func (p *WPWithinInitConsumerResult) GetErr() *wpthrift_types.Error {
  if !p.IsSetErr() {
    return WPWithinInitConsumerResult_Err_DEFAULT
  }
return p.Err
}
func (p *WPWithinInitConsumerResult) IsSetErr() bool {
  return p.Err != nil
}

func (p *WPWithinInitConsumerResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinInitConsumerResult)  ReadField1(iprot thrift.TProtocol) error {
  p.Err = &wpthrift_types.Error{}
  if err := p.Err.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Err), err)
  }
  return nil
}

func (p *WPWithinInitConsumerResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("initConsumer_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinInitConsumerResult) writeField1(oprot thrift.TProtocol) (err error) {
  if p.IsSetErr() {
    if err := oprot.WriteFieldBegin("err", thrift.STRUCT, 1); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:err: ", p), err) }
    if err := p.Err.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Err), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 1:err: ", p), err) }
  }
  return err
}

func (p *WPWithinInitConsumerResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinInitConsumerResult(%+v)", *p)
}

// Attributes:
//  - PspConfig
type WPWithinInitProducerArgs struct {
  PspConfig map[string]string `thrift:"pspConfig,1" db:"pspConfig" json:"pspConfig"`
}

func NewWPWithinInitProducerArgs() *WPWithinInitProducerArgs {
  return &WPWithinInitProducerArgs{}
}


func (p *WPWithinInitProducerArgs) GetPspConfig() map[string]string {
  return p.PspConfig
}
func (p *WPWithinInitProducerArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinInitProducerArgs)  ReadField1(iprot thrift.TProtocol) error {
  _, _, size, err := iprot.ReadMapBegin()
  if err != nil {
    return thrift.PrependError("error reading map begin: ", err)
  }
  tMap := make(map[string]string, size)
  p.PspConfig =  tMap
  for i := 0; i < size; i ++ {
var _key34 string
    if v, err := iprot.ReadString(); err != nil {
    return thrift.PrependError("error reading field 0: ", err)
} else {
    _key34 = v
}
var _val35 string
    if v, err := iprot.ReadString(); err != nil {
    return thrift.PrependError("error reading field 0: ", err)
} else {
    _val35 = v
}
    p.PspConfig[_key34] = _val35
  }
  if err := iprot.ReadMapEnd(); err != nil {
    return thrift.PrependError("error reading map end: ", err)
  }
  return nil
}

func (p *WPWithinInitProducerArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("initProducer_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinInitProducerArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("pspConfig", thrift.MAP, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:pspConfig: ", p), err) }
  if err := oprot.WriteMapBegin(thrift.STRING, thrift.STRING, len(p.PspConfig)); err != nil {
    return thrift.PrependError("error writing map begin: ", err)
  }
  for k, v := range p.PspConfig {
    if err := oprot.WriteString(string(k)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T. (0) field write error: ", p), err) }
    if err := oprot.WriteString(string(v)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T. (0) field write error: ", p), err) }
  }
  if err := oprot.WriteMapEnd(); err != nil {
    return thrift.PrependError("error writing map end: ", err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:pspConfig: ", p), err) }
  return err
}

func (p *WPWithinInitProducerArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinInitProducerArgs(%+v)", *p)
}

// Attributes:
//  - Err
type WPWithinInitProducerResult struct {
  Err *wpthrift_types.Error `thrift:"err,1" db:"err" json:"err,omitempty"`
}

func NewWPWithinInitProducerResult() *WPWithinInitProducerResult {
  return &WPWithinInitProducerResult{}
}

var WPWithinInitProducerResult_Err_DEFAULT *wpthrift_types.Error
func (p *WPWithinInitProducerResult) GetErr() *wpthrift_types.Error {
  if !p.IsSetErr() {
    return WPWithinInitProducerResult_Err_DEFAULT
  }
return p.Err
}
func (p *WPWithinInitProducerResult) IsSetErr() bool {
  return p.Err != nil
}

func (p *WPWithinInitProducerResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinInitProducerResult)  ReadField1(iprot thrift.TProtocol) error {
  p.Err = &wpthrift_types.Error{}
  if err := p.Err.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Err), err)
  }
  return nil
}

func (p *WPWithinInitProducerResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("initProducer_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinInitProducerResult) writeField1(oprot thrift.TProtocol) (err error) {
  if p.IsSetErr() {
    if err := oprot.WriteFieldBegin("err", thrift.STRUCT, 1); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:err: ", p), err) }
    if err := p.Err.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Err), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 1:err: ", p), err) }
  }
  return err
}

func (p *WPWithinInitProducerResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinInitProducerResult(%+v)", *p)
}

type WPWithinGetDeviceArgs struct {
}

func NewWPWithinGetDeviceArgs() *WPWithinGetDeviceArgs {
  return &WPWithinGetDeviceArgs{}
}

func (p *WPWithinGetDeviceArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    if err := iprot.Skip(fieldTypeId); err != nil {
      return err
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinGetDeviceArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("getDevice_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinGetDeviceArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinGetDeviceArgs(%+v)", *p)
}

// Attributes:
//  - Success
type WPWithinGetDeviceResult struct {
  Success *wpthrift_types.Device `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewWPWithinGetDeviceResult() *WPWithinGetDeviceResult {
  return &WPWithinGetDeviceResult{}
}

var WPWithinGetDeviceResult_Success_DEFAULT *wpthrift_types.Device
func (p *WPWithinGetDeviceResult) GetSuccess() *wpthrift_types.Device {
  if !p.IsSetSuccess() {
    return WPWithinGetDeviceResult_Success_DEFAULT
  }
return p.Success
}
func (p *WPWithinGetDeviceResult) IsSetSuccess() bool {
  return p.Success != nil
}

func (p *WPWithinGetDeviceResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 0:
      if err := p.ReadField0(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinGetDeviceResult)  ReadField0(iprot thrift.TProtocol) error {
  p.Success = &wpthrift_types.Device{}
  if err := p.Success.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Success), err)
  }
  return nil
}

func (p *WPWithinGetDeviceResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("getDevice_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField0(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinGetDeviceResult) writeField0(oprot thrift.TProtocol) (err error) {
  if p.IsSetSuccess() {
    if err := oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err) }
    if err := p.Success.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Success), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err) }
  }
  return err
}

func (p *WPWithinGetDeviceResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinGetDeviceResult(%+v)", *p)
}

// Attributes:
//  - TimeoutMillis
type WPWithinStartServiceBroadcastArgs struct {
  TimeoutMillis int32 `thrift:"timeoutMillis,1" db:"timeoutMillis" json:"timeoutMillis"`
}

func NewWPWithinStartServiceBroadcastArgs() *WPWithinStartServiceBroadcastArgs {
  return &WPWithinStartServiceBroadcastArgs{}
}


func (p *WPWithinStartServiceBroadcastArgs) GetTimeoutMillis() int32 {
  return p.TimeoutMillis
}
func (p *WPWithinStartServiceBroadcastArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinStartServiceBroadcastArgs)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.TimeoutMillis = v
}
  return nil
}

func (p *WPWithinStartServiceBroadcastArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("startServiceBroadcast_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinStartServiceBroadcastArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("timeoutMillis", thrift.I32, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:timeoutMillis: ", p), err) }
  if err := oprot.WriteI32(int32(p.TimeoutMillis)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.timeoutMillis (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:timeoutMillis: ", p), err) }
  return err
}

func (p *WPWithinStartServiceBroadcastArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinStartServiceBroadcastArgs(%+v)", *p)
}

// Attributes:
//  - Err
type WPWithinStartServiceBroadcastResult struct {
  Err *wpthrift_types.Error `thrift:"err,1" db:"err" json:"err,omitempty"`
}

func NewWPWithinStartServiceBroadcastResult() *WPWithinStartServiceBroadcastResult {
  return &WPWithinStartServiceBroadcastResult{}
}

var WPWithinStartServiceBroadcastResult_Err_DEFAULT *wpthrift_types.Error
func (p *WPWithinStartServiceBroadcastResult) GetErr() *wpthrift_types.Error {
  if !p.IsSetErr() {
    return WPWithinStartServiceBroadcastResult_Err_DEFAULT
  }
return p.Err
}
func (p *WPWithinStartServiceBroadcastResult) IsSetErr() bool {
  return p.Err != nil
}

func (p *WPWithinStartServiceBroadcastResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinStartServiceBroadcastResult)  ReadField1(iprot thrift.TProtocol) error {
  p.Err = &wpthrift_types.Error{}
  if err := p.Err.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Err), err)
  }
  return nil
}

func (p *WPWithinStartServiceBroadcastResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("startServiceBroadcast_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinStartServiceBroadcastResult) writeField1(oprot thrift.TProtocol) (err error) {
  if p.IsSetErr() {
    if err := oprot.WriteFieldBegin("err", thrift.STRUCT, 1); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:err: ", p), err) }
    if err := p.Err.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Err), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 1:err: ", p), err) }
  }
  return err
}

func (p *WPWithinStartServiceBroadcastResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinStartServiceBroadcastResult(%+v)", *p)
}

type WPWithinStopServiceBroadcastArgs struct {
}

func NewWPWithinStopServiceBroadcastArgs() *WPWithinStopServiceBroadcastArgs {
  return &WPWithinStopServiceBroadcastArgs{}
}

func (p *WPWithinStopServiceBroadcastArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    if err := iprot.Skip(fieldTypeId); err != nil {
      return err
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinStopServiceBroadcastArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("stopServiceBroadcast_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinStopServiceBroadcastArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinStopServiceBroadcastArgs(%+v)", *p)
}

// Attributes:
//  - Err
type WPWithinStopServiceBroadcastResult struct {
  Err *wpthrift_types.Error `thrift:"err,1" db:"err" json:"err,omitempty"`
}

func NewWPWithinStopServiceBroadcastResult() *WPWithinStopServiceBroadcastResult {
  return &WPWithinStopServiceBroadcastResult{}
}

var WPWithinStopServiceBroadcastResult_Err_DEFAULT *wpthrift_types.Error
func (p *WPWithinStopServiceBroadcastResult) GetErr() *wpthrift_types.Error {
  if !p.IsSetErr() {
    return WPWithinStopServiceBroadcastResult_Err_DEFAULT
  }
return p.Err
}
func (p *WPWithinStopServiceBroadcastResult) IsSetErr() bool {
  return p.Err != nil
}

func (p *WPWithinStopServiceBroadcastResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinStopServiceBroadcastResult)  ReadField1(iprot thrift.TProtocol) error {
  p.Err = &wpthrift_types.Error{}
  if err := p.Err.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Err), err)
  }
  return nil
}

func (p *WPWithinStopServiceBroadcastResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("stopServiceBroadcast_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinStopServiceBroadcastResult) writeField1(oprot thrift.TProtocol) (err error) {
  if p.IsSetErr() {
    if err := oprot.WriteFieldBegin("err", thrift.STRUCT, 1); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:err: ", p), err) }
    if err := p.Err.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Err), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 1:err: ", p), err) }
  }
  return err
}

func (p *WPWithinStopServiceBroadcastResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinStopServiceBroadcastResult(%+v)", *p)
}

// Attributes:
//  - TimeoutMillis
type WPWithinDeviceDiscoveryArgs struct {
  TimeoutMillis int32 `thrift:"timeoutMillis,1" db:"timeoutMillis" json:"timeoutMillis"`
}

func NewWPWithinDeviceDiscoveryArgs() *WPWithinDeviceDiscoveryArgs {
  return &WPWithinDeviceDiscoveryArgs{}
}


func (p *WPWithinDeviceDiscoveryArgs) GetTimeoutMillis() int32 {
  return p.TimeoutMillis
}
func (p *WPWithinDeviceDiscoveryArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinDeviceDiscoveryArgs)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.TimeoutMillis = v
}
  return nil
}

func (p *WPWithinDeviceDiscoveryArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("deviceDiscovery_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinDeviceDiscoveryArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("timeoutMillis", thrift.I32, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:timeoutMillis: ", p), err) }
  if err := oprot.WriteI32(int32(p.TimeoutMillis)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.timeoutMillis (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:timeoutMillis: ", p), err) }
  return err
}

func (p *WPWithinDeviceDiscoveryArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinDeviceDiscoveryArgs(%+v)", *p)
}

// Attributes:
//  - Success
//  - Err
type WPWithinDeviceDiscoveryResult struct {
  Success map[*wpthrift_types.ServiceMessage]struct{} `thrift:"success,0" db:"success" json:"success,omitempty"`
  Err *wpthrift_types.Error `thrift:"err,1" db:"err" json:"err,omitempty"`
}

func NewWPWithinDeviceDiscoveryResult() *WPWithinDeviceDiscoveryResult {
  return &WPWithinDeviceDiscoveryResult{}
}

var WPWithinDeviceDiscoveryResult_Success_DEFAULT map[*wpthrift_types.ServiceMessage]struct{}

func (p *WPWithinDeviceDiscoveryResult) GetSuccess() map[*wpthrift_types.ServiceMessage]struct{} {
  return p.Success
}
var WPWithinDeviceDiscoveryResult_Err_DEFAULT *wpthrift_types.Error
func (p *WPWithinDeviceDiscoveryResult) GetErr() *wpthrift_types.Error {
  if !p.IsSetErr() {
    return WPWithinDeviceDiscoveryResult_Err_DEFAULT
  }
return p.Err
}
func (p *WPWithinDeviceDiscoveryResult) IsSetSuccess() bool {
  return p.Success != nil
}

func (p *WPWithinDeviceDiscoveryResult) IsSetErr() bool {
  return p.Err != nil
}

func (p *WPWithinDeviceDiscoveryResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 0:
      if err := p.ReadField0(iprot); err != nil {
        return err
      }
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinDeviceDiscoveryResult)  ReadField0(iprot thrift.TProtocol) error {
  _, size, err := iprot.ReadSetBegin()
  if err != nil {
    return thrift.PrependError("error reading set begin: ", err)
  }
  tSet := make(map[*wpthrift_types.ServiceMessage]struct{}, size)
  p.Success =  tSet
  for i := 0; i < size; i ++ {
    _elem36 := &wpthrift_types.ServiceMessage{}
    if err := _elem36.Read(iprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", _elem36), err)
    }
    p.Success[_elem36] = struct{}{}
  }
  if err := iprot.ReadSetEnd(); err != nil {
    return thrift.PrependError("error reading set end: ", err)
  }
  return nil
}

func (p *WPWithinDeviceDiscoveryResult)  ReadField1(iprot thrift.TProtocol) error {
  p.Err = &wpthrift_types.Error{}
  if err := p.Err.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Err), err)
  }
  return nil
}

func (p *WPWithinDeviceDiscoveryResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("deviceDiscovery_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField0(oprot); err != nil { return err }
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinDeviceDiscoveryResult) writeField0(oprot thrift.TProtocol) (err error) {
  if p.IsSetSuccess() {
    if err := oprot.WriteFieldBegin("success", thrift.SET, 0); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err) }
    if err := oprot.WriteSetBegin(thrift.STRUCT, len(p.Success)); err != nil {
      return thrift.PrependError("error writing set begin: ", err)
    }
    for v, _ := range p.Success {
      if err := v.Write(oprot); err != nil {
        return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", v), err)
      }
    }
    if err := oprot.WriteSetEnd(); err != nil {
      return thrift.PrependError("error writing set end: ", err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err) }
  }
  return err
}

func (p *WPWithinDeviceDiscoveryResult) writeField1(oprot thrift.TProtocol) (err error) {
  if p.IsSetErr() {
    if err := oprot.WriteFieldBegin("err", thrift.STRUCT, 1); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:err: ", p), err) }
    if err := p.Err.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Err), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 1:err: ", p), err) }
  }
  return err
}

func (p *WPWithinDeviceDiscoveryResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinDeviceDiscoveryResult(%+v)", *p)
}

type WPWithinRequestServicesArgs struct {
}

func NewWPWithinRequestServicesArgs() *WPWithinRequestServicesArgs {
  return &WPWithinRequestServicesArgs{}
}

func (p *WPWithinRequestServicesArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    if err := iprot.Skip(fieldTypeId); err != nil {
      return err
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinRequestServicesArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("requestServices_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinRequestServicesArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinRequestServicesArgs(%+v)", *p)
}

// Attributes:
//  - Success
//  - Err
type WPWithinRequestServicesResult struct {
  Success map[*wpthrift_types.ServiceDetails]struct{} `thrift:"success,0" db:"success" json:"success,omitempty"`
  Err *wpthrift_types.Error `thrift:"err,1" db:"err" json:"err,omitempty"`
}

func NewWPWithinRequestServicesResult() *WPWithinRequestServicesResult {
  return &WPWithinRequestServicesResult{}
}

var WPWithinRequestServicesResult_Success_DEFAULT map[*wpthrift_types.ServiceDetails]struct{}

func (p *WPWithinRequestServicesResult) GetSuccess() map[*wpthrift_types.ServiceDetails]struct{} {
  return p.Success
}
var WPWithinRequestServicesResult_Err_DEFAULT *wpthrift_types.Error
func (p *WPWithinRequestServicesResult) GetErr() *wpthrift_types.Error {
  if !p.IsSetErr() {
    return WPWithinRequestServicesResult_Err_DEFAULT
  }
return p.Err
}
func (p *WPWithinRequestServicesResult) IsSetSuccess() bool {
  return p.Success != nil
}

func (p *WPWithinRequestServicesResult) IsSetErr() bool {
  return p.Err != nil
}

func (p *WPWithinRequestServicesResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 0:
      if err := p.ReadField0(iprot); err != nil {
        return err
      }
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinRequestServicesResult)  ReadField0(iprot thrift.TProtocol) error {
  _, size, err := iprot.ReadSetBegin()
  if err != nil {
    return thrift.PrependError("error reading set begin: ", err)
  }
  tSet := make(map[*wpthrift_types.ServiceDetails]struct{}, size)
  p.Success =  tSet
  for i := 0; i < size; i ++ {
    _elem37 := &wpthrift_types.ServiceDetails{}
    if err := _elem37.Read(iprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", _elem37), err)
    }
    p.Success[_elem37] = struct{}{}
  }
  if err := iprot.ReadSetEnd(); err != nil {
    return thrift.PrependError("error reading set end: ", err)
  }
  return nil
}

func (p *WPWithinRequestServicesResult)  ReadField1(iprot thrift.TProtocol) error {
  p.Err = &wpthrift_types.Error{}
  if err := p.Err.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Err), err)
  }
  return nil
}

func (p *WPWithinRequestServicesResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("requestServices_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField0(oprot); err != nil { return err }
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinRequestServicesResult) writeField0(oprot thrift.TProtocol) (err error) {
  if p.IsSetSuccess() {
    if err := oprot.WriteFieldBegin("success", thrift.SET, 0); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err) }
    if err := oprot.WriteSetBegin(thrift.STRUCT, len(p.Success)); err != nil {
      return thrift.PrependError("error writing set begin: ", err)
    }
    for v, _ := range p.Success {
      if err := v.Write(oprot); err != nil {
        return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", v), err)
      }
    }
    if err := oprot.WriteSetEnd(); err != nil {
      return thrift.PrependError("error writing set end: ", err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err) }
  }
  return err
}

func (p *WPWithinRequestServicesResult) writeField1(oprot thrift.TProtocol) (err error) {
  if p.IsSetErr() {
    if err := oprot.WriteFieldBegin("err", thrift.STRUCT, 1); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:err: ", p), err) }
    if err := p.Err.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Err), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 1:err: ", p), err) }
  }
  return err
}

func (p *WPWithinRequestServicesResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinRequestServicesResult(%+v)", *p)
}

// Attributes:
//  - ServiceId
type WPWithinGetServicePricesArgs struct {
  ServiceId int32 `thrift:"serviceId,1" db:"serviceId" json:"serviceId"`
}

func NewWPWithinGetServicePricesArgs() *WPWithinGetServicePricesArgs {
  return &WPWithinGetServicePricesArgs{}
}


func (p *WPWithinGetServicePricesArgs) GetServiceId() int32 {
  return p.ServiceId
}
func (p *WPWithinGetServicePricesArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinGetServicePricesArgs)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.ServiceId = v
}
  return nil
}

func (p *WPWithinGetServicePricesArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("getServicePrices_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinGetServicePricesArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("serviceId", thrift.I32, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:serviceId: ", p), err) }
  if err := oprot.WriteI32(int32(p.ServiceId)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.serviceId (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:serviceId: ", p), err) }
  return err
}

func (p *WPWithinGetServicePricesArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinGetServicePricesArgs(%+v)", *p)
}

// Attributes:
//  - Success
//  - Err
type WPWithinGetServicePricesResult struct {
  Success map[*wpthrift_types.Price]struct{} `thrift:"success,0" db:"success" json:"success,omitempty"`
  Err *wpthrift_types.Error `thrift:"err,1" db:"err" json:"err,omitempty"`
}

func NewWPWithinGetServicePricesResult() *WPWithinGetServicePricesResult {
  return &WPWithinGetServicePricesResult{}
}

var WPWithinGetServicePricesResult_Success_DEFAULT map[*wpthrift_types.Price]struct{}

func (p *WPWithinGetServicePricesResult) GetSuccess() map[*wpthrift_types.Price]struct{} {
  return p.Success
}
var WPWithinGetServicePricesResult_Err_DEFAULT *wpthrift_types.Error
func (p *WPWithinGetServicePricesResult) GetErr() *wpthrift_types.Error {
  if !p.IsSetErr() {
    return WPWithinGetServicePricesResult_Err_DEFAULT
  }
return p.Err
}
func (p *WPWithinGetServicePricesResult) IsSetSuccess() bool {
  return p.Success != nil
}

func (p *WPWithinGetServicePricesResult) IsSetErr() bool {
  return p.Err != nil
}

func (p *WPWithinGetServicePricesResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 0:
      if err := p.ReadField0(iprot); err != nil {
        return err
      }
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinGetServicePricesResult)  ReadField0(iprot thrift.TProtocol) error {
  _, size, err := iprot.ReadSetBegin()
  if err != nil {
    return thrift.PrependError("error reading set begin: ", err)
  }
  tSet := make(map[*wpthrift_types.Price]struct{}, size)
  p.Success =  tSet
  for i := 0; i < size; i ++ {
    _elem38 := &wpthrift_types.Price{}
    if err := _elem38.Read(iprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", _elem38), err)
    }
    p.Success[_elem38] = struct{}{}
  }
  if err := iprot.ReadSetEnd(); err != nil {
    return thrift.PrependError("error reading set end: ", err)
  }
  return nil
}

func (p *WPWithinGetServicePricesResult)  ReadField1(iprot thrift.TProtocol) error {
  p.Err = &wpthrift_types.Error{}
  if err := p.Err.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Err), err)
  }
  return nil
}

func (p *WPWithinGetServicePricesResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("getServicePrices_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField0(oprot); err != nil { return err }
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinGetServicePricesResult) writeField0(oprot thrift.TProtocol) (err error) {
  if p.IsSetSuccess() {
    if err := oprot.WriteFieldBegin("success", thrift.SET, 0); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err) }
    if err := oprot.WriteSetBegin(thrift.STRUCT, len(p.Success)); err != nil {
      return thrift.PrependError("error writing set begin: ", err)
    }
    for v, _ := range p.Success {
      if err := v.Write(oprot); err != nil {
        return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", v), err)
      }
    }
    if err := oprot.WriteSetEnd(); err != nil {
      return thrift.PrependError("error writing set end: ", err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err) }
  }
  return err
}

func (p *WPWithinGetServicePricesResult) writeField1(oprot thrift.TProtocol) (err error) {
  if p.IsSetErr() {
    if err := oprot.WriteFieldBegin("err", thrift.STRUCT, 1); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:err: ", p), err) }
    if err := p.Err.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Err), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 1:err: ", p), err) }
  }
  return err
}

func (p *WPWithinGetServicePricesResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinGetServicePricesResult(%+v)", *p)
}

// Attributes:
//  - ServiceId
//  - NumberOfUnits
//  - PriceId
type WPWithinSelectServiceArgs struct {
  ServiceId int32 `thrift:"serviceId,1" db:"serviceId" json:"serviceId"`
  NumberOfUnits int32 `thrift:"numberOfUnits,2" db:"numberOfUnits" json:"numberOfUnits"`
  PriceId int32 `thrift:"priceId,3" db:"priceId" json:"priceId"`
}

func NewWPWithinSelectServiceArgs() *WPWithinSelectServiceArgs {
  return &WPWithinSelectServiceArgs{}
}


func (p *WPWithinSelectServiceArgs) GetServiceId() int32 {
  return p.ServiceId
}

func (p *WPWithinSelectServiceArgs) GetNumberOfUnits() int32 {
  return p.NumberOfUnits
}

func (p *WPWithinSelectServiceArgs) GetPriceId() int32 {
  return p.PriceId
}
func (p *WPWithinSelectServiceArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    case 2:
      if err := p.ReadField2(iprot); err != nil {
        return err
      }
    case 3:
      if err := p.ReadField3(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinSelectServiceArgs)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.ServiceId = v
}
  return nil
}

func (p *WPWithinSelectServiceArgs)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.NumberOfUnits = v
}
  return nil
}

func (p *WPWithinSelectServiceArgs)  ReadField3(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 3: ", err)
} else {
  p.PriceId = v
}
  return nil
}

func (p *WPWithinSelectServiceArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("selectService_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinSelectServiceArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("serviceId", thrift.I32, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:serviceId: ", p), err) }
  if err := oprot.WriteI32(int32(p.ServiceId)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.serviceId (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:serviceId: ", p), err) }
  return err
}

func (p *WPWithinSelectServiceArgs) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("numberOfUnits", thrift.I32, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:numberOfUnits: ", p), err) }
  if err := oprot.WriteI32(int32(p.NumberOfUnits)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.numberOfUnits (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:numberOfUnits: ", p), err) }
  return err
}

func (p *WPWithinSelectServiceArgs) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("priceId", thrift.I32, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:priceId: ", p), err) }
  if err := oprot.WriteI32(int32(p.PriceId)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.priceId (3) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:priceId: ", p), err) }
  return err
}

func (p *WPWithinSelectServiceArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinSelectServiceArgs(%+v)", *p)
}

// Attributes:
//  - Success
//  - Err
type WPWithinSelectServiceResult struct {
  Success *wpthrift_types.TotalPriceResponse `thrift:"success,0" db:"success" json:"success,omitempty"`
  Err *wpthrift_types.Error `thrift:"err,1" db:"err" json:"err,omitempty"`
}

func NewWPWithinSelectServiceResult() *WPWithinSelectServiceResult {
  return &WPWithinSelectServiceResult{}
}

var WPWithinSelectServiceResult_Success_DEFAULT *wpthrift_types.TotalPriceResponse
func (p *WPWithinSelectServiceResult) GetSuccess() *wpthrift_types.TotalPriceResponse {
  if !p.IsSetSuccess() {
    return WPWithinSelectServiceResult_Success_DEFAULT
  }
return p.Success
}
var WPWithinSelectServiceResult_Err_DEFAULT *wpthrift_types.Error
func (p *WPWithinSelectServiceResult) GetErr() *wpthrift_types.Error {
  if !p.IsSetErr() {
    return WPWithinSelectServiceResult_Err_DEFAULT
  }
return p.Err
}
func (p *WPWithinSelectServiceResult) IsSetSuccess() bool {
  return p.Success != nil
}

func (p *WPWithinSelectServiceResult) IsSetErr() bool {
  return p.Err != nil
}

func (p *WPWithinSelectServiceResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 0:
      if err := p.ReadField0(iprot); err != nil {
        return err
      }
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinSelectServiceResult)  ReadField0(iprot thrift.TProtocol) error {
  p.Success = &wpthrift_types.TotalPriceResponse{}
  if err := p.Success.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Success), err)
  }
  return nil
}

func (p *WPWithinSelectServiceResult)  ReadField1(iprot thrift.TProtocol) error {
  p.Err = &wpthrift_types.Error{}
  if err := p.Err.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Err), err)
  }
  return nil
}

func (p *WPWithinSelectServiceResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("selectService_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField0(oprot); err != nil { return err }
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinSelectServiceResult) writeField0(oprot thrift.TProtocol) (err error) {
  if p.IsSetSuccess() {
    if err := oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err) }
    if err := p.Success.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Success), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err) }
  }
  return err
}

func (p *WPWithinSelectServiceResult) writeField1(oprot thrift.TProtocol) (err error) {
  if p.IsSetErr() {
    if err := oprot.WriteFieldBegin("err", thrift.STRUCT, 1); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:err: ", p), err) }
    if err := p.Err.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Err), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 1:err: ", p), err) }
  }
  return err
}

func (p *WPWithinSelectServiceResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinSelectServiceResult(%+v)", *p)
}

// Attributes:
//  - Request
type WPWithinMakePaymentArgs struct {
  Request *wpthrift_types.TotalPriceResponse `thrift:"request,1" db:"request" json:"request"`
}

func NewWPWithinMakePaymentArgs() *WPWithinMakePaymentArgs {
  return &WPWithinMakePaymentArgs{}
}

var WPWithinMakePaymentArgs_Request_DEFAULT *wpthrift_types.TotalPriceResponse
func (p *WPWithinMakePaymentArgs) GetRequest() *wpthrift_types.TotalPriceResponse {
  if !p.IsSetRequest() {
    return WPWithinMakePaymentArgs_Request_DEFAULT
  }
return p.Request
}
func (p *WPWithinMakePaymentArgs) IsSetRequest() bool {
  return p.Request != nil
}

func (p *WPWithinMakePaymentArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinMakePaymentArgs)  ReadField1(iprot thrift.TProtocol) error {
  p.Request = &wpthrift_types.TotalPriceResponse{}
  if err := p.Request.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Request), err)
  }
  return nil
}

func (p *WPWithinMakePaymentArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("makePayment_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinMakePaymentArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("request", thrift.STRUCT, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:request: ", p), err) }
  if err := p.Request.Write(oprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Request), err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:request: ", p), err) }
  return err
}

func (p *WPWithinMakePaymentArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinMakePaymentArgs(%+v)", *p)
}

// Attributes:
//  - Success
//  - Err
type WPWithinMakePaymentResult struct {
  Success *wpthrift_types.PaymentResponse `thrift:"success,0" db:"success" json:"success,omitempty"`
  Err *wpthrift_types.Error `thrift:"err,1" db:"err" json:"err,omitempty"`
}

func NewWPWithinMakePaymentResult() *WPWithinMakePaymentResult {
  return &WPWithinMakePaymentResult{}
}

var WPWithinMakePaymentResult_Success_DEFAULT *wpthrift_types.PaymentResponse
func (p *WPWithinMakePaymentResult) GetSuccess() *wpthrift_types.PaymentResponse {
  if !p.IsSetSuccess() {
    return WPWithinMakePaymentResult_Success_DEFAULT
  }
return p.Success
}
var WPWithinMakePaymentResult_Err_DEFAULT *wpthrift_types.Error
func (p *WPWithinMakePaymentResult) GetErr() *wpthrift_types.Error {
  if !p.IsSetErr() {
    return WPWithinMakePaymentResult_Err_DEFAULT
  }
return p.Err
}
func (p *WPWithinMakePaymentResult) IsSetSuccess() bool {
  return p.Success != nil
}

func (p *WPWithinMakePaymentResult) IsSetErr() bool {
  return p.Err != nil
}

func (p *WPWithinMakePaymentResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 0:
      if err := p.ReadField0(iprot); err != nil {
        return err
      }
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinMakePaymentResult)  ReadField0(iprot thrift.TProtocol) error {
  p.Success = &wpthrift_types.PaymentResponse{}
  if err := p.Success.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Success), err)
  }
  return nil
}

func (p *WPWithinMakePaymentResult)  ReadField1(iprot thrift.TProtocol) error {
  p.Err = &wpthrift_types.Error{}
  if err := p.Err.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Err), err)
  }
  return nil
}

func (p *WPWithinMakePaymentResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("makePayment_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField0(oprot); err != nil { return err }
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinMakePaymentResult) writeField0(oprot thrift.TProtocol) (err error) {
  if p.IsSetSuccess() {
    if err := oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err) }
    if err := p.Success.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Success), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err) }
  }
  return err
}

func (p *WPWithinMakePaymentResult) writeField1(oprot thrift.TProtocol) (err error) {
  if p.IsSetErr() {
    if err := oprot.WriteFieldBegin("err", thrift.STRUCT, 1); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:err: ", p), err) }
    if err := p.Err.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Err), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 1:err: ", p), err) }
  }
  return err
}

func (p *WPWithinMakePaymentResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinMakePaymentResult(%+v)", *p)
}

// Attributes:
//  - ServiceID
//  - ServiceDeliveryToken
//  - UnitsToSupply
type WPWithinBeginServiceDeliveryArgs struct {
  ServiceID int32 `thrift:"serviceID,1" db:"serviceID" json:"serviceID"`
  ServiceDeliveryToken *wpthrift_types.ServiceDeliveryToken `thrift:"serviceDeliveryToken,2" db:"serviceDeliveryToken" json:"serviceDeliveryToken"`
  UnitsToSupply int32 `thrift:"unitsToSupply,3" db:"unitsToSupply" json:"unitsToSupply"`
}

func NewWPWithinBeginServiceDeliveryArgs() *WPWithinBeginServiceDeliveryArgs {
  return &WPWithinBeginServiceDeliveryArgs{}
}


func (p *WPWithinBeginServiceDeliveryArgs) GetServiceID() int32 {
  return p.ServiceID
}
var WPWithinBeginServiceDeliveryArgs_ServiceDeliveryToken_DEFAULT *wpthrift_types.ServiceDeliveryToken
func (p *WPWithinBeginServiceDeliveryArgs) GetServiceDeliveryToken() *wpthrift_types.ServiceDeliveryToken {
  if !p.IsSetServiceDeliveryToken() {
    return WPWithinBeginServiceDeliveryArgs_ServiceDeliveryToken_DEFAULT
  }
return p.ServiceDeliveryToken
}

func (p *WPWithinBeginServiceDeliveryArgs) GetUnitsToSupply() int32 {
  return p.UnitsToSupply
}
func (p *WPWithinBeginServiceDeliveryArgs) IsSetServiceDeliveryToken() bool {
  return p.ServiceDeliveryToken != nil
}

func (p *WPWithinBeginServiceDeliveryArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    case 2:
      if err := p.ReadField2(iprot); err != nil {
        return err
      }
    case 3:
      if err := p.ReadField3(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinBeginServiceDeliveryArgs)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.ServiceID = v
}
  return nil
}

func (p *WPWithinBeginServiceDeliveryArgs)  ReadField2(iprot thrift.TProtocol) error {
  p.ServiceDeliveryToken = &wpthrift_types.ServiceDeliveryToken{}
  if err := p.ServiceDeliveryToken.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.ServiceDeliveryToken), err)
  }
  return nil
}

func (p *WPWithinBeginServiceDeliveryArgs)  ReadField3(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 3: ", err)
} else {
  p.UnitsToSupply = v
}
  return nil
}

func (p *WPWithinBeginServiceDeliveryArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("beginServiceDelivery_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinBeginServiceDeliveryArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("serviceID", thrift.I32, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:serviceID: ", p), err) }
  if err := oprot.WriteI32(int32(p.ServiceID)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.serviceID (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:serviceID: ", p), err) }
  return err
}

func (p *WPWithinBeginServiceDeliveryArgs) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("serviceDeliveryToken", thrift.STRUCT, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:serviceDeliveryToken: ", p), err) }
  if err := p.ServiceDeliveryToken.Write(oprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.ServiceDeliveryToken), err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:serviceDeliveryToken: ", p), err) }
  return err
}

func (p *WPWithinBeginServiceDeliveryArgs) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("unitsToSupply", thrift.I32, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:unitsToSupply: ", p), err) }
  if err := oprot.WriteI32(int32(p.UnitsToSupply)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.unitsToSupply (3) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:unitsToSupply: ", p), err) }
  return err
}

func (p *WPWithinBeginServiceDeliveryArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinBeginServiceDeliveryArgs(%+v)", *p)
}

// Attributes:
//  - Success
//  - Err
type WPWithinBeginServiceDeliveryResult struct {
  Success *wpthrift_types.ServiceDeliveryToken `thrift:"success,0" db:"success" json:"success,omitempty"`
  Err *wpthrift_types.Error `thrift:"err,1" db:"err" json:"err,omitempty"`
}

func NewWPWithinBeginServiceDeliveryResult() *WPWithinBeginServiceDeliveryResult {
  return &WPWithinBeginServiceDeliveryResult{}
}

var WPWithinBeginServiceDeliveryResult_Success_DEFAULT *wpthrift_types.ServiceDeliveryToken
func (p *WPWithinBeginServiceDeliveryResult) GetSuccess() *wpthrift_types.ServiceDeliveryToken {
  if !p.IsSetSuccess() {
    return WPWithinBeginServiceDeliveryResult_Success_DEFAULT
  }
return p.Success
}
var WPWithinBeginServiceDeliveryResult_Err_DEFAULT *wpthrift_types.Error
func (p *WPWithinBeginServiceDeliveryResult) GetErr() *wpthrift_types.Error {
  if !p.IsSetErr() {
    return WPWithinBeginServiceDeliveryResult_Err_DEFAULT
  }
return p.Err
}
func (p *WPWithinBeginServiceDeliveryResult) IsSetSuccess() bool {
  return p.Success != nil
}

func (p *WPWithinBeginServiceDeliveryResult) IsSetErr() bool {
  return p.Err != nil
}

func (p *WPWithinBeginServiceDeliveryResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 0:
      if err := p.ReadField0(iprot); err != nil {
        return err
      }
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinBeginServiceDeliveryResult)  ReadField0(iprot thrift.TProtocol) error {
  p.Success = &wpthrift_types.ServiceDeliveryToken{}
  if err := p.Success.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Success), err)
  }
  return nil
}

func (p *WPWithinBeginServiceDeliveryResult)  ReadField1(iprot thrift.TProtocol) error {
  p.Err = &wpthrift_types.Error{}
  if err := p.Err.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Err), err)
  }
  return nil
}

func (p *WPWithinBeginServiceDeliveryResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("beginServiceDelivery_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField0(oprot); err != nil { return err }
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinBeginServiceDeliveryResult) writeField0(oprot thrift.TProtocol) (err error) {
  if p.IsSetSuccess() {
    if err := oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err) }
    if err := p.Success.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Success), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err) }
  }
  return err
}

func (p *WPWithinBeginServiceDeliveryResult) writeField1(oprot thrift.TProtocol) (err error) {
  if p.IsSetErr() {
    if err := oprot.WriteFieldBegin("err", thrift.STRUCT, 1); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:err: ", p), err) }
    if err := p.Err.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Err), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 1:err: ", p), err) }
  }
  return err
}

func (p *WPWithinBeginServiceDeliveryResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinBeginServiceDeliveryResult(%+v)", *p)
}

// Attributes:
//  - ServiceID
//  - ServiceDeliveryToken
//  - UnitsReceived
type WPWithinEndServiceDeliveryArgs struct {
  ServiceID int32 `thrift:"serviceID,1" db:"serviceID" json:"serviceID"`
  ServiceDeliveryToken *wpthrift_types.ServiceDeliveryToken `thrift:"serviceDeliveryToken,2" db:"serviceDeliveryToken" json:"serviceDeliveryToken"`
  UnitsReceived int32 `thrift:"unitsReceived,3" db:"unitsReceived" json:"unitsReceived"`
}

func NewWPWithinEndServiceDeliveryArgs() *WPWithinEndServiceDeliveryArgs {
  return &WPWithinEndServiceDeliveryArgs{}
}


func (p *WPWithinEndServiceDeliveryArgs) GetServiceID() int32 {
  return p.ServiceID
}
var WPWithinEndServiceDeliveryArgs_ServiceDeliveryToken_DEFAULT *wpthrift_types.ServiceDeliveryToken
func (p *WPWithinEndServiceDeliveryArgs) GetServiceDeliveryToken() *wpthrift_types.ServiceDeliveryToken {
  if !p.IsSetServiceDeliveryToken() {
    return WPWithinEndServiceDeliveryArgs_ServiceDeliveryToken_DEFAULT
  }
return p.ServiceDeliveryToken
}

func (p *WPWithinEndServiceDeliveryArgs) GetUnitsReceived() int32 {
  return p.UnitsReceived
}
func (p *WPWithinEndServiceDeliveryArgs) IsSetServiceDeliveryToken() bool {
  return p.ServiceDeliveryToken != nil
}

func (p *WPWithinEndServiceDeliveryArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    case 2:
      if err := p.ReadField2(iprot); err != nil {
        return err
      }
    case 3:
      if err := p.ReadField3(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinEndServiceDeliveryArgs)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.ServiceID = v
}
  return nil
}

func (p *WPWithinEndServiceDeliveryArgs)  ReadField2(iprot thrift.TProtocol) error {
  p.ServiceDeliveryToken = &wpthrift_types.ServiceDeliveryToken{}
  if err := p.ServiceDeliveryToken.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.ServiceDeliveryToken), err)
  }
  return nil
}

func (p *WPWithinEndServiceDeliveryArgs)  ReadField3(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 3: ", err)
} else {
  p.UnitsReceived = v
}
  return nil
}

func (p *WPWithinEndServiceDeliveryArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("endServiceDelivery_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinEndServiceDeliveryArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("serviceID", thrift.I32, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:serviceID: ", p), err) }
  if err := oprot.WriteI32(int32(p.ServiceID)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.serviceID (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:serviceID: ", p), err) }
  return err
}

func (p *WPWithinEndServiceDeliveryArgs) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("serviceDeliveryToken", thrift.STRUCT, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:serviceDeliveryToken: ", p), err) }
  if err := p.ServiceDeliveryToken.Write(oprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.ServiceDeliveryToken), err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:serviceDeliveryToken: ", p), err) }
  return err
}

func (p *WPWithinEndServiceDeliveryArgs) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("unitsReceived", thrift.I32, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:unitsReceived: ", p), err) }
  if err := oprot.WriteI32(int32(p.UnitsReceived)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.unitsReceived (3) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:unitsReceived: ", p), err) }
  return err
}

func (p *WPWithinEndServiceDeliveryArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinEndServiceDeliveryArgs(%+v)", *p)
}

// Attributes:
//  - Success
//  - Err
type WPWithinEndServiceDeliveryResult struct {
  Success *wpthrift_types.ServiceDeliveryToken `thrift:"success,0" db:"success" json:"success,omitempty"`
  Err *wpthrift_types.Error `thrift:"err,1" db:"err" json:"err,omitempty"`
}

func NewWPWithinEndServiceDeliveryResult() *WPWithinEndServiceDeliveryResult {
  return &WPWithinEndServiceDeliveryResult{}
}

var WPWithinEndServiceDeliveryResult_Success_DEFAULT *wpthrift_types.ServiceDeliveryToken
func (p *WPWithinEndServiceDeliveryResult) GetSuccess() *wpthrift_types.ServiceDeliveryToken {
  if !p.IsSetSuccess() {
    return WPWithinEndServiceDeliveryResult_Success_DEFAULT
  }
return p.Success
}
var WPWithinEndServiceDeliveryResult_Err_DEFAULT *wpthrift_types.Error
func (p *WPWithinEndServiceDeliveryResult) GetErr() *wpthrift_types.Error {
  if !p.IsSetErr() {
    return WPWithinEndServiceDeliveryResult_Err_DEFAULT
  }
return p.Err
}
func (p *WPWithinEndServiceDeliveryResult) IsSetSuccess() bool {
  return p.Success != nil
}

func (p *WPWithinEndServiceDeliveryResult) IsSetErr() bool {
  return p.Err != nil
}

func (p *WPWithinEndServiceDeliveryResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 0:
      if err := p.ReadField0(iprot); err != nil {
        return err
      }
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinEndServiceDeliveryResult)  ReadField0(iprot thrift.TProtocol) error {
  p.Success = &wpthrift_types.ServiceDeliveryToken{}
  if err := p.Success.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Success), err)
  }
  return nil
}

func (p *WPWithinEndServiceDeliveryResult)  ReadField1(iprot thrift.TProtocol) error {
  p.Err = &wpthrift_types.Error{}
  if err := p.Err.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Err), err)
  }
  return nil
}

func (p *WPWithinEndServiceDeliveryResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("endServiceDelivery_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField0(oprot); err != nil { return err }
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinEndServiceDeliveryResult) writeField0(oprot thrift.TProtocol) (err error) {
  if p.IsSetSuccess() {
    if err := oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err) }
    if err := p.Success.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Success), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err) }
  }
  return err
}

func (p *WPWithinEndServiceDeliveryResult) writeField1(oprot thrift.TProtocol) (err error) {
  if p.IsSetErr() {
    if err := oprot.WriteFieldBegin("err", thrift.STRUCT, 1); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:err: ", p), err) }
    if err := p.Err.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Err), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 1:err: ", p), err) }
  }
  return err
}

func (p *WPWithinEndServiceDeliveryResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinEndServiceDeliveryResult(%+v)", *p)
}


type WPWithinCallback interface {  //WorldpayWithin Callback Service - RPC clients implement this service to enable callbacks from WorldpayWithin Service

  // Parameters:
  //  - ServiceID
  //  - ServiceDeliveryToken
  //  - UnitsToSupply
  BeginServiceDelivery(serviceID int32, serviceDeliveryToken *wpthrift_types.ServiceDeliveryToken, unitsToSupply int32) (err error)
  // Parameters:
  //  - ServiceID
  //  - ServiceDeliveryToken
  //  - UnitsReceived
  EndServiceDelivery(serviceID int32, serviceDeliveryToken *wpthrift_types.ServiceDeliveryToken, unitsReceived int32) (err error)
}

//WorldpayWithin Callback Service - RPC clients implement this service to enable callbacks from WorldpayWithin Service
type WPWithinCallbackClient struct {
  Transport thrift.TTransport
  ProtocolFactory thrift.TProtocolFactory
  InputProtocol thrift.TProtocol
  OutputProtocol thrift.TProtocol
  SeqId int32
}

func NewWPWithinCallbackClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *WPWithinCallbackClient {
  return &WPWithinCallbackClient{Transport: t,
    ProtocolFactory: f,
    InputProtocol: f.GetProtocol(t),
    OutputProtocol: f.GetProtocol(t),
    SeqId: 0,
  }
}

func NewWPWithinCallbackClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *WPWithinCallbackClient {
  return &WPWithinCallbackClient{Transport: t,
    ProtocolFactory: nil,
    InputProtocol: iprot,
    OutputProtocol: oprot,
    SeqId: 0,
  }
}

// Parameters:
//  - ServiceID
//  - ServiceDeliveryToken
//  - UnitsToSupply
func (p *WPWithinCallbackClient) BeginServiceDelivery(serviceID int32, serviceDeliveryToken *wpthrift_types.ServiceDeliveryToken, unitsToSupply int32) (err error) {
  if err = p.sendBeginServiceDelivery(serviceID, serviceDeliveryToken, unitsToSupply); err != nil { return }
  return p.recvBeginServiceDelivery()
}

func (p *WPWithinCallbackClient) sendBeginServiceDelivery(serviceID int32, serviceDeliveryToken *wpthrift_types.ServiceDeliveryToken, unitsToSupply int32)(err error) {
  oprot := p.OutputProtocol
  if oprot == nil {
    oprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.OutputProtocol = oprot
  }
  p.SeqId++
  if err = oprot.WriteMessageBegin("beginServiceDelivery", thrift.CALL, p.SeqId); err != nil {
      return
  }
  args := WPWithinCallbackBeginServiceDeliveryArgs{
  ServiceID : serviceID,
  ServiceDeliveryToken : serviceDeliveryToken,
  UnitsToSupply : unitsToSupply,
  }
  if err = args.Write(oprot); err != nil {
      return
  }
  if err = oprot.WriteMessageEnd(); err != nil {
      return
  }
  return oprot.Flush()
}


func (p *WPWithinCallbackClient) recvBeginServiceDelivery() (err error) {
  iprot := p.InputProtocol
  if iprot == nil {
    iprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.InputProtocol = iprot
  }
  method, mTypeId, seqId, err := iprot.ReadMessageBegin()
  if err != nil {
    return
  }
  if method != "beginServiceDelivery" {
    err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "beginServiceDelivery failed: wrong method name")
    return
  }
  if p.SeqId != seqId {
    err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "beginServiceDelivery failed: out of sequence response")
    return
  }
  if mTypeId == thrift.EXCEPTION {
    error104 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
    var error105 error
    error105, err = error104.Read(iprot)
    if err != nil {
      return
    }
    if err = iprot.ReadMessageEnd(); err != nil {
      return
    }
    err = error105
    return
  }
  if mTypeId != thrift.REPLY {
    err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "beginServiceDelivery failed: invalid message type")
    return
  }
  result := WPWithinCallbackBeginServiceDeliveryResult{}
  if err = result.Read(iprot); err != nil {
    return
  }
  if err = iprot.ReadMessageEnd(); err != nil {
    return
  }
  if result.Err != nil {
    err = result.Err
    return 
  }
  return
}

// Parameters:
//  - ServiceID
//  - ServiceDeliveryToken
//  - UnitsReceived
func (p *WPWithinCallbackClient) EndServiceDelivery(serviceID int32, serviceDeliveryToken *wpthrift_types.ServiceDeliveryToken, unitsReceived int32) (err error) {
  if err = p.sendEndServiceDelivery(serviceID, serviceDeliveryToken, unitsReceived); err != nil { return }
  return p.recvEndServiceDelivery()
}

func (p *WPWithinCallbackClient) sendEndServiceDelivery(serviceID int32, serviceDeliveryToken *wpthrift_types.ServiceDeliveryToken, unitsReceived int32)(err error) {
  oprot := p.OutputProtocol
  if oprot == nil {
    oprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.OutputProtocol = oprot
  }
  p.SeqId++
  if err = oprot.WriteMessageBegin("endServiceDelivery", thrift.CALL, p.SeqId); err != nil {
      return
  }
  args := WPWithinCallbackEndServiceDeliveryArgs{
  ServiceID : serviceID,
  ServiceDeliveryToken : serviceDeliveryToken,
  UnitsReceived : unitsReceived,
  }
  if err = args.Write(oprot); err != nil {
      return
  }
  if err = oprot.WriteMessageEnd(); err != nil {
      return
  }
  return oprot.Flush()
}


func (p *WPWithinCallbackClient) recvEndServiceDelivery() (err error) {
  iprot := p.InputProtocol
  if iprot == nil {
    iprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.InputProtocol = iprot
  }
  method, mTypeId, seqId, err := iprot.ReadMessageBegin()
  if err != nil {
    return
  }
  if method != "endServiceDelivery" {
    err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "endServiceDelivery failed: wrong method name")
    return
  }
  if p.SeqId != seqId {
    err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "endServiceDelivery failed: out of sequence response")
    return
  }
  if mTypeId == thrift.EXCEPTION {
    error106 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
    var error107 error
    error107, err = error106.Read(iprot)
    if err != nil {
      return
    }
    if err = iprot.ReadMessageEnd(); err != nil {
      return
    }
    err = error107
    return
  }
  if mTypeId != thrift.REPLY {
    err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "endServiceDelivery failed: invalid message type")
    return
  }
  result := WPWithinCallbackEndServiceDeliveryResult{}
  if err = result.Read(iprot); err != nil {
    return
  }
  if err = iprot.ReadMessageEnd(); err != nil {
    return
  }
  if result.Err != nil {
    err = result.Err
    return 
  }
  return
}


type WPWithinCallbackProcessor struct {
  processorMap map[string]thrift.TProcessorFunction
  handler WPWithinCallback
}

func (p *WPWithinCallbackProcessor) AddToProcessorMap(key string, processor thrift.TProcessorFunction) {
  p.processorMap[key] = processor
}

func (p *WPWithinCallbackProcessor) GetProcessorFunction(key string) (processor thrift.TProcessorFunction, ok bool) {
  processor, ok = p.processorMap[key]
  return processor, ok
}

func (p *WPWithinCallbackProcessor) ProcessorMap() map[string]thrift.TProcessorFunction {
  return p.processorMap
}

func NewWPWithinCallbackProcessor(handler WPWithinCallback) *WPWithinCallbackProcessor {

  self108 := &WPWithinCallbackProcessor{handler:handler, processorMap:make(map[string]thrift.TProcessorFunction)}
  self108.processorMap["beginServiceDelivery"] = &wPWithinCallbackProcessorBeginServiceDelivery{handler:handler}
  self108.processorMap["endServiceDelivery"] = &wPWithinCallbackProcessorEndServiceDelivery{handler:handler}
return self108
}

func (p *WPWithinCallbackProcessor) Process(iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  name, _, seqId, err := iprot.ReadMessageBegin()
  if err != nil { return false, err }
  if processor, ok := p.GetProcessorFunction(name); ok {
    return processor.Process(seqId, iprot, oprot)
  }
  iprot.Skip(thrift.STRUCT)
  iprot.ReadMessageEnd()
  x109 := thrift.NewTApplicationException(thrift.UNKNOWN_METHOD, "Unknown function " + name)
  oprot.WriteMessageBegin(name, thrift.EXCEPTION, seqId)
  x109.Write(oprot)
  oprot.WriteMessageEnd()
  oprot.Flush()
  return false, x109

}

type wPWithinCallbackProcessorBeginServiceDelivery struct {
  handler WPWithinCallback
}

func (p *wPWithinCallbackProcessorBeginServiceDelivery) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := WPWithinCallbackBeginServiceDeliveryArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("beginServiceDelivery", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := WPWithinCallbackBeginServiceDeliveryResult{}
  var err2 error
  if err2 = p.handler.BeginServiceDelivery(args.ServiceID, args.ServiceDeliveryToken, args.UnitsToSupply); err2 != nil {
  switch v := err2.(type) {
    case *wpthrift_types.Error:
  result.Err = v
    default:
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing beginServiceDelivery: " + err2.Error())
    oprot.WriteMessageBegin("beginServiceDelivery", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  }
  }
  if err2 = oprot.WriteMessageBegin("beginServiceDelivery", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type wPWithinCallbackProcessorEndServiceDelivery struct {
  handler WPWithinCallback
}

func (p *wPWithinCallbackProcessorEndServiceDelivery) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := WPWithinCallbackEndServiceDeliveryArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("endServiceDelivery", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := WPWithinCallbackEndServiceDeliveryResult{}
  var err2 error
  if err2 = p.handler.EndServiceDelivery(args.ServiceID, args.ServiceDeliveryToken, args.UnitsReceived); err2 != nil {
  switch v := err2.(type) {
    case *wpthrift_types.Error:
  result.Err = v
    default:
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing endServiceDelivery: " + err2.Error())
    oprot.WriteMessageBegin("endServiceDelivery", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  }
  }
  if err2 = oprot.WriteMessageBegin("endServiceDelivery", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}


// HELPER FUNCTIONS AND STRUCTURES

// Attributes:
//  - ServiceID
//  - ServiceDeliveryToken
//  - UnitsToSupply
type WPWithinCallbackBeginServiceDeliveryArgs struct {
  ServiceID int32 `thrift:"serviceID,1" db:"serviceID" json:"serviceID"`
  ServiceDeliveryToken *wpthrift_types.ServiceDeliveryToken `thrift:"serviceDeliveryToken,2" db:"serviceDeliveryToken" json:"serviceDeliveryToken"`
  UnitsToSupply int32 `thrift:"unitsToSupply,3" db:"unitsToSupply" json:"unitsToSupply"`
}

func NewWPWithinCallbackBeginServiceDeliveryArgs() *WPWithinCallbackBeginServiceDeliveryArgs {
  return &WPWithinCallbackBeginServiceDeliveryArgs{}
}


func (p *WPWithinCallbackBeginServiceDeliveryArgs) GetServiceID() int32 {
  return p.ServiceID
}
var WPWithinCallbackBeginServiceDeliveryArgs_ServiceDeliveryToken_DEFAULT *wpthrift_types.ServiceDeliveryToken
func (p *WPWithinCallbackBeginServiceDeliveryArgs) GetServiceDeliveryToken() *wpthrift_types.ServiceDeliveryToken {
  if !p.IsSetServiceDeliveryToken() {
    return WPWithinCallbackBeginServiceDeliveryArgs_ServiceDeliveryToken_DEFAULT
  }
return p.ServiceDeliveryToken
}

func (p *WPWithinCallbackBeginServiceDeliveryArgs) GetUnitsToSupply() int32 {
  return p.UnitsToSupply
}
func (p *WPWithinCallbackBeginServiceDeliveryArgs) IsSetServiceDeliveryToken() bool {
  return p.ServiceDeliveryToken != nil
}

func (p *WPWithinCallbackBeginServiceDeliveryArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    case 2:
      if err := p.ReadField2(iprot); err != nil {
        return err
      }
    case 3:
      if err := p.ReadField3(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinCallbackBeginServiceDeliveryArgs)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.ServiceID = v
}
  return nil
}

func (p *WPWithinCallbackBeginServiceDeliveryArgs)  ReadField2(iprot thrift.TProtocol) error {
  p.ServiceDeliveryToken = &wpthrift_types.ServiceDeliveryToken{}
  if err := p.ServiceDeliveryToken.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.ServiceDeliveryToken), err)
  }
  return nil
}

func (p *WPWithinCallbackBeginServiceDeliveryArgs)  ReadField3(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 3: ", err)
} else {
  p.UnitsToSupply = v
}
  return nil
}

func (p *WPWithinCallbackBeginServiceDeliveryArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("beginServiceDelivery_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinCallbackBeginServiceDeliveryArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("serviceID", thrift.I32, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:serviceID: ", p), err) }
  if err := oprot.WriteI32(int32(p.ServiceID)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.serviceID (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:serviceID: ", p), err) }
  return err
}

func (p *WPWithinCallbackBeginServiceDeliveryArgs) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("serviceDeliveryToken", thrift.STRUCT, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:serviceDeliveryToken: ", p), err) }
  if err := p.ServiceDeliveryToken.Write(oprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.ServiceDeliveryToken), err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:serviceDeliveryToken: ", p), err) }
  return err
}

func (p *WPWithinCallbackBeginServiceDeliveryArgs) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("unitsToSupply", thrift.I32, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:unitsToSupply: ", p), err) }
  if err := oprot.WriteI32(int32(p.UnitsToSupply)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.unitsToSupply (3) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:unitsToSupply: ", p), err) }
  return err
}

func (p *WPWithinCallbackBeginServiceDeliveryArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinCallbackBeginServiceDeliveryArgs(%+v)", *p)
}

// Attributes:
//  - Err
type WPWithinCallbackBeginServiceDeliveryResult struct {
  Err *wpthrift_types.Error `thrift:"err,1" db:"err" json:"err,omitempty"`
}

func NewWPWithinCallbackBeginServiceDeliveryResult() *WPWithinCallbackBeginServiceDeliveryResult {
  return &WPWithinCallbackBeginServiceDeliveryResult{}
}

var WPWithinCallbackBeginServiceDeliveryResult_Err_DEFAULT *wpthrift_types.Error
func (p *WPWithinCallbackBeginServiceDeliveryResult) GetErr() *wpthrift_types.Error {
  if !p.IsSetErr() {
    return WPWithinCallbackBeginServiceDeliveryResult_Err_DEFAULT
  }
return p.Err
}
func (p *WPWithinCallbackBeginServiceDeliveryResult) IsSetErr() bool {
  return p.Err != nil
}

func (p *WPWithinCallbackBeginServiceDeliveryResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinCallbackBeginServiceDeliveryResult)  ReadField1(iprot thrift.TProtocol) error {
  p.Err = &wpthrift_types.Error{}
  if err := p.Err.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Err), err)
  }
  return nil
}

func (p *WPWithinCallbackBeginServiceDeliveryResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("beginServiceDelivery_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinCallbackBeginServiceDeliveryResult) writeField1(oprot thrift.TProtocol) (err error) {
  if p.IsSetErr() {
    if err := oprot.WriteFieldBegin("err", thrift.STRUCT, 1); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:err: ", p), err) }
    if err := p.Err.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Err), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 1:err: ", p), err) }
  }
  return err
}

func (p *WPWithinCallbackBeginServiceDeliveryResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinCallbackBeginServiceDeliveryResult(%+v)", *p)
}

// Attributes:
//  - ServiceID
//  - ServiceDeliveryToken
//  - UnitsReceived
type WPWithinCallbackEndServiceDeliveryArgs struct {
  ServiceID int32 `thrift:"serviceID,1" db:"serviceID" json:"serviceID"`
  ServiceDeliveryToken *wpthrift_types.ServiceDeliveryToken `thrift:"serviceDeliveryToken,2" db:"serviceDeliveryToken" json:"serviceDeliveryToken"`
  UnitsReceived int32 `thrift:"unitsReceived,3" db:"unitsReceived" json:"unitsReceived"`
}

func NewWPWithinCallbackEndServiceDeliveryArgs() *WPWithinCallbackEndServiceDeliveryArgs {
  return &WPWithinCallbackEndServiceDeliveryArgs{}
}


func (p *WPWithinCallbackEndServiceDeliveryArgs) GetServiceID() int32 {
  return p.ServiceID
}
var WPWithinCallbackEndServiceDeliveryArgs_ServiceDeliveryToken_DEFAULT *wpthrift_types.ServiceDeliveryToken
func (p *WPWithinCallbackEndServiceDeliveryArgs) GetServiceDeliveryToken() *wpthrift_types.ServiceDeliveryToken {
  if !p.IsSetServiceDeliveryToken() {
    return WPWithinCallbackEndServiceDeliveryArgs_ServiceDeliveryToken_DEFAULT
  }
return p.ServiceDeliveryToken
}

func (p *WPWithinCallbackEndServiceDeliveryArgs) GetUnitsReceived() int32 {
  return p.UnitsReceived
}
func (p *WPWithinCallbackEndServiceDeliveryArgs) IsSetServiceDeliveryToken() bool {
  return p.ServiceDeliveryToken != nil
}

func (p *WPWithinCallbackEndServiceDeliveryArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    case 2:
      if err := p.ReadField2(iprot); err != nil {
        return err
      }
    case 3:
      if err := p.ReadField3(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinCallbackEndServiceDeliveryArgs)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.ServiceID = v
}
  return nil
}

func (p *WPWithinCallbackEndServiceDeliveryArgs)  ReadField2(iprot thrift.TProtocol) error {
  p.ServiceDeliveryToken = &wpthrift_types.ServiceDeliveryToken{}
  if err := p.ServiceDeliveryToken.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.ServiceDeliveryToken), err)
  }
  return nil
}

func (p *WPWithinCallbackEndServiceDeliveryArgs)  ReadField3(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 3: ", err)
} else {
  p.UnitsReceived = v
}
  return nil
}

func (p *WPWithinCallbackEndServiceDeliveryArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("endServiceDelivery_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinCallbackEndServiceDeliveryArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("serviceID", thrift.I32, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:serviceID: ", p), err) }
  if err := oprot.WriteI32(int32(p.ServiceID)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.serviceID (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:serviceID: ", p), err) }
  return err
}

func (p *WPWithinCallbackEndServiceDeliveryArgs) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("serviceDeliveryToken", thrift.STRUCT, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:serviceDeliveryToken: ", p), err) }
  if err := p.ServiceDeliveryToken.Write(oprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.ServiceDeliveryToken), err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:serviceDeliveryToken: ", p), err) }
  return err
}

func (p *WPWithinCallbackEndServiceDeliveryArgs) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("unitsReceived", thrift.I32, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:unitsReceived: ", p), err) }
  if err := oprot.WriteI32(int32(p.UnitsReceived)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.unitsReceived (3) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:unitsReceived: ", p), err) }
  return err
}

func (p *WPWithinCallbackEndServiceDeliveryArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinCallbackEndServiceDeliveryArgs(%+v)", *p)
}

// Attributes:
//  - Err
type WPWithinCallbackEndServiceDeliveryResult struct {
  Err *wpthrift_types.Error `thrift:"err,1" db:"err" json:"err,omitempty"`
}

func NewWPWithinCallbackEndServiceDeliveryResult() *WPWithinCallbackEndServiceDeliveryResult {
  return &WPWithinCallbackEndServiceDeliveryResult{}
}

var WPWithinCallbackEndServiceDeliveryResult_Err_DEFAULT *wpthrift_types.Error
func (p *WPWithinCallbackEndServiceDeliveryResult) GetErr() *wpthrift_types.Error {
  if !p.IsSetErr() {
    return WPWithinCallbackEndServiceDeliveryResult_Err_DEFAULT
  }
return p.Err
}
func (p *WPWithinCallbackEndServiceDeliveryResult) IsSetErr() bool {
  return p.Err != nil
}

func (p *WPWithinCallbackEndServiceDeliveryResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WPWithinCallbackEndServiceDeliveryResult)  ReadField1(iprot thrift.TProtocol) error {
  p.Err = &wpthrift_types.Error{}
  if err := p.Err.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Err), err)
  }
  return nil
}

func (p *WPWithinCallbackEndServiceDeliveryResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("endServiceDelivery_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WPWithinCallbackEndServiceDeliveryResult) writeField1(oprot thrift.TProtocol) (err error) {
  if p.IsSetErr() {
    if err := oprot.WriteFieldBegin("err", thrift.STRUCT, 1); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:err: ", p), err) }
    if err := p.Err.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Err), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 1:err: ", p), err) }
  }
  return err
}

func (p *WPWithinCallbackEndServiceDeliveryResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WPWithinCallbackEndServiceDeliveryResult(%+v)", *p)
}


